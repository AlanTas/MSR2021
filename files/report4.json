[{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097949.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'box' is not defined.","line":10,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":6},{"ruleId":"no-undef","severity":2,"message":"'box' is not defined.","line":12,"column":6,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'box' is not defined.","line":12,"column":10,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":13}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var h = window.innerHeight;\r\nvar w = window.innerWidth;\r\n\r\nfunction create() {\r\n  var boxPosition = {\r\n    left: Math.random() * w,\r\n    top: Math.random() * h\r\n  };\r\n  \r\n  box = document.querySelector(\"#box\")\r\n  \r\n  if(box)box.remove();\r\n\r\n  document.write(\r\n    '<div id=\"box\" style=\"width: 64px; height:64px;background-color:blue; left: ' +\r\n      boxPosition.left +\r\n      \"px; top: \" +\r\n      boxPosition.top +\r\n      'px;position: absolute\"></div>'\r\n  );\r\n}\r\n\r\ncreate();\r\nsetInterval(create, 5000);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097990.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"    <form [formGroup]=\"myForm\">\r\n          <div class=\"checkbox\">\r\n            <label for=\"waiting\"> waiting </label>\r\n            <input class=\"input-control checkbox-box\" formControlName=\"isTest\" \r\n              [attr.disabled]=\"myForm.get('isTimed').value|| null\"\r\n              name=\"waiting\" id=\"waiting\"\r\n              type=\"checkbox\">\r\n          </div>\r\n    \r\n          <div class=\"checkbox\">\r\n            <label for=\"functional\"> functional </label>\r\n            <input class=\"input-control checkbox-box\" formControlName=\"isFunctional\" \r\n              [attr.disabled]=\"myForm.get('isTimed').value || null\"\r\n              name=\"functional\" id=\"functional\"\r\n              type=\"checkbox\">\r\n          </div>\r\n    \r\n          <div class=\"checkbox\">\r\n            <label for=\"test\"> test </label>\r\n            <input class=\"input-control checkbox-box\" formControlName=\"isTimed\" name=\"test\" \r\n             [attr.disabled]=\"(myForm.get('isTest').value && myForm.get('isFunctional').value) || null\" \r\n             id=\"test\" type=\"checkbox\">\r\n          </div>\r\n    \r\n    </form>\r\n\r\n   combineLatest(\r\n      this.myForm.get(\"isTest\").valueChanges.pipe(startWith(this.myForm.value.isTest)),\r\n      this.myForm.get(\"isFunctional\").valueChanges.pipe(startWith(this.myForm.value.isFunctional)),\r\n      this.myForm.get(\"isTimed\").valueChanges.pipe(startWith(this.myForm.value.isTimed))\r\n    )\r\n      .subscribe(([isTest, isFunctional, isTimed]: [any, any, any]) => {\r\n        const timedCtr = this.myForm.get(\"isTimed\");\r\n        const testCtr = this.myForm.get(\"isTest\");\r\n        const functionalCtr = this.myForm.get(\"isFunctional\");\r\n        if (isTimed) {\r\n          testCtr.disable({ emitEvent: false });\r\n          functionalCtr.disable({ emitEvent: false });\r\n          testCtr.setValue(false, { emitEvent: false });\r\n          functionalCtr.setValue(false, { emitEvent: false });\r\n        } else {\r\n          testCtr.enable({ emitEvent: false });\r\n          functionalCtr.enable({ emitEvent: false });\r\n        }\r\n        if (isTest && isFunctional) {\r\n          timedCtr.disable({ emitEvent: false });\r\n           timedCtr.setValue(false, { emitEvent: false });\r\n        } else timedCtr.enable({ emitEvent: false });\r\n      });\r\n  }\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098077.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'redTimeout' is not defined.","line":1,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'handleTerminate' is not defined.","line":11,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":16}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"redTimeout = () => {\r\n  const timeoutId = setTimeout(() => {\r\n    this.props.redBoxScore();\r\n    this.setState({\r\n      overlayContainer: 'none'\r\n    });\r\n\r\n  }, 5000);\r\n  this.setState({ timeoutId });\r\n}\r\nhandleTerminate = () => {\r\n  clearTimeout(this.state.timeoutId);\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098144.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<form id=\"regForm\" name=\"regForm\" action=\"[NEED ACTION]\" class=\"col-sm-6\">\r\n    ...\r\n    <div style=\"overflow:auto;\">\r\n        <div style=\"float:right;\">\r\n            <button type=\"button\" id=\"prevBtn\" click=\"nextPrev(-1)\">Previous</button>\r\n            <button type=\"button\" id=\"nextBtn\" onclick=\"nextPrev(1)\">Next</button>\r\n            <submit type=\"submit\" class=\"hide\" value=\"Submit\" />\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\nfunction showTab(n) {\r\n    var x = document.getElementsByClassName(\"tab\");\r\n    x[n].style.display = \"block\";\r\n\r\n    if (n == 0) {\r\n        document.getElementById(\"prevBtn\").style.display = \"none\";\r\n    } else {\r\n        document.getElementById(\"prevBtn\").style.display = \"inline\";\r\n    }\r\n    if (n == (x.length - 1)) {\r\n        document.getElementById(\"nextBtn\").classList.add('hide');\r\n        document.getElementById(\"submitBtn\").classList.remove('hide');\r\n    } else {\r\n        document.getElementById(\"nextBtn\").classList.remove('hide');\r\n        document.getElementById(\"submitBtn\").classList.add('hide');\r\n    }\r\n\r\n    fixStepIndicator(n)\r\n}\r\n\r\nfunction showTab(n) {\r\n\r\n    var x = document.getElementsByClassName(\"tab\");\r\n    var nextSubmitBtn = document.getElementById(\"nextBtn\");\r\n    x[n].style.display = \"block\";\r\n\r\n    if (n == 0) {\r\n        document.getElementById(\"prevBtn\").style.display = \"none\";\r\n    } else {\r\n        document.getElementById(\"prevBtn\").style.display = \"inline\";\r\n    }\r\n    if (n == (x.length - 1)) {\r\n        nextSubmitBtn.textContent = \"Submit\";\r\n        nextSubmitBtn.onClick = someSubmitFunc;\r\n    } else {\r\n        nextSubmitBtn.textContent = \"Next\";\r\n        nextSubmitBtn.onClick = function () { nextPrev(1); };\r\n    }\r\n\r\n    fixStepIndicator(n)\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098422.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098750.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n <table border='0' width='100%'>\r\n        <tr >\r\n            <td width=\"20%\"  class=\"bold\">Status 1:</td>\r\n            <td><select name=\"status1\" id=\"status1\"><option value=\"null\">select:</option>\r\n                </select>\r\n            </td>\r\n            <!--I want to hide the next 3 tds on some condition-->\r\n            <td class=\"status2\" colspan=\"2\">&#160;</td>\r\n            <td class=\"bold status2\">status 2:</td>\r\n            <td class=\"status2\"><select>\r\n                    <option value=\"null\">select</option>\r\n                    <option value=\"SV\">V - 1</option>\r\n                    <option value=\"SK\">V - 2</option>\r\n            </select></td>\r\n        </tr>\r\n        <tr id=\"status3\">\r\n            <td width=\"20%\" class=\"bold\">Status 3:</td>\r\n            <td><select>\r\n                    <option value=\"null\">select</option>\r\n                    <option value=\"SV\">V - 3</option>\r\n                    <option value=\"SK\">V - 4</option>\r\n                </select>\r\n            </td>\r\n        </tr>\r\n    </table>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098905.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":1,"column":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"handleSubmit(event) {\r\n  var requestOptions = {}\r\n\r\n  const params = new URLSearchParams({\r\n    'name': this.state.name,\r\n    'birth': this.state.birth,\r\n    'oscars': this.state.oscars\r\n  });\r\n\r\n  if (this.state.movies.length > 0) {\r\n    params.append(\"movies\", this.state.movies)\r\n  }\r\n\r\n  requestOptions.method = \"POST\";\r\n  requestOptions.body = params;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098919.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n\r\n<div id=\"firstdiv\">\r\n    <div id=\"text1_first\" class=\"myclass searchA searchB searchC\">...</div>\r\n    <div id=\"text2_first\" class=\"myclass searchB searchA searchC\">...</div>\r\n    <div id=\"text3_first\" class=\"myclass searchD searchB searchA\">...</div>\r\n    <div id=\"text3_first\" class=\"myclass searchX searchY searchZ\">...</div>\r\n</div>\r\n\r\n<div id=\"scnddiv\">\r\n    <div id=\"text1_scnd\" class=\"myclass searchA searchB searchC\">...</div>\r\n    <div id=\"text2_scnd\" class=\"myclass searchB searchA searchC\">...</div>\r\n    <div id=\"text3_scnd\" class=\"myclass searchD searchB searchA\">...</div>\r\n    <div id=\"text3_scnd\" class=\"myclass searchX searchY searchZ\">...</div>\r\n</div>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098953.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65098968.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":13,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":34},{"ruleId":"no-unused-vars","severity":2,"message":"'err' is defined but never used.","line":19,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":19,"endColumn":37}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const sharp = require(\"sharp\");\r\n\r\nconst originalFilename = \"image.jpg\";\r\n\r\n\r\nconst image = sharp(originalFilename);\r\n\r\n// this is just a placeholder\r\nconst imageWidth = 500;\r\n\r\nimage\r\n  .extract({ left: 0, top: 0, width: imageWidth, height: 25000 })\r\n  .toFile(\"top.jpg\", function(err) {\r\n    // Save the top of the image to a file named \"top.jpg\"\r\n  });\r\n\r\nimage\r\n  .extract({ left: 0, top: 25000, width: imageWidth, height: 25000 })\r\n  .toFile(\"bottom.jpg\", function(err) {\r\n    // Save the bottom of the image to a file named \"bottom.jpg\"\r\n  });\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65099055.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n\r\n    <input id=\"mail\" type=\"text\" name=\"email\" value=\"user@example.com\">\r\n    <button id=\"btn\" onclick=\"abc()\">click On me</button>\r\n\r\n    <p id='text'></p>\r\n\r\n    <script>\r\n        function abc() {\r\n            var mail = document.getElementById('mail');\r\n            var text = document.getElementById('text');\r\n            text.innerText = mail.value;\r\n        }\r\n    </script>\r\n\r\n</body>\r\n</html>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65099077.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Identifier 'regs' has already been declared","line":27,"column":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const regs = [\r\n  {\r\n    \"id\": \"1\",\r\n    \"date\": 1606826246, // Tuesday, December 1, 2020 12:37:26 PM\r\n    \"customer\": \"customer 1\",\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"date\": 1604353553, // Monday, November 2, 2020 9:45:53 PM\r\n    \"customer\": \"customer 2\",\r\n  },\r\n  {\r\n    \"id\": \"3\",\r\n    \"date\": 1606860022, // Tuesday, December 1, 2020 10:00:22 PM\r\n    \"customer\": \"customer 3\",\r\n  }\r\n]\r\n\r\nconst filterTimestamp = 1606859476; // Tuesday, December 1, 2020 9:51:16 PM\r\nconst filterDateString = new Date(filterTimestamp*1000).toISOString().slice(0, 10);\r\n// \"2020-12-01\" sliced from \"2020-12-01T21:51:16.000Z\"\r\n\r\nconst regsOnDate = regs.filter(o => (\r\n  new Date(o.date*1000).toISOString().slice(0, 10) === filterDateString));\r\n\r\nconsole.log( regsOnDate );\r\nconst regs = [\r\n  {\r\n    \"id\": \"1\",\r\n    \"date\": 1606826246, // Tuesday, December 1, 2020 12:37:26 PM\r\n    \"customer\": \"customer 1\",\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"date\": 1604353553, // Monday, November 2, 2020 9:45:53 PM\r\n    \"customer\": \"customer 2\",\r\n  },\r\n  {\r\n    \"id\": \"3\",\r\n    \"date\": 1606860022, // Tuesday, December 1, 2020 10:00:22 PM\r\n    \"customer\": \"customer 3\",\r\n  }\r\n]\r\n\r\n\r\nconst filterTimestamp = 1606859476; // Tuesday, December 1, 2020 9:51:16 PM\r\nconst filterDateString = new Date(filterTimestamp*1000).toDateString();\r\n\r\nconst regsOnDate = regs.filter(o => (\r\n  new Date(o.date*1000).toDateString() === filterDateString));\r\n\r\nconsole.log( regsOnDate );","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65099364.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65099581.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":1,"column":10}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"render() {\r\nthis.ul.innerHTML = \"\";\r\nthis.tasks.forEach((task) => {\r\n  const li = document.createElement(\"li\");\r\n  const cb = document.createElement(\"input\");\r\n  cb.type = \"checkbox\";\r\n  cb.addEventListener(\"click\", (e) => {\r\n    this.markTask(e);\r\n  });\r\n  li.appendChild(cb);\r\n\r\n  li.append(document.createTextNode(task.title));\r\n\r\n  const btn = document.createElement(\"button\");\r\n  li.appendChild(btn);\r\n  btn.textContent = \"Delete\";\r\n  btn.classList.add(\"remove\");\r\n  btn.addEventListener(\"click\", (e) => {\r\n    this.deleteTask(e);\r\n  });\r\n  this.ul.appendChild(li);\r\n\r\n   if (task.done) {\r\n    cb.checked = true;\r\n    li.style.textDecoration = \"line-through\";\r\n   } else {\r\n    cb.checked = false;\r\n    li.style.textDecoration = \"none\";\r\n   }\r\n });\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65099671.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":30,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function add() {\r\n  var input1 = parseInt(document.getElementById(\"t1\").value);\r\n  var input2 = parseInt(document.getElementById(\"t2\").value);\r\n  var result = input1 + input2;\r\n  document.getElementById('add-result').textContent = result;\r\n}\r\n\r\nfunction divide() {\r\n  var input1 = parseInt(document.getElementById(\"t3\").value);\r\n  var input2 = parseInt(document.getElementById(\"t4\").value);\r\n  var result = Math.floor(input1 / input2);\r\n  var remainder = input1 % input2\r\n  document.getElementById('divide-result').textContent = result;\r\n  document.getElementById('divide-remainder').textContent = remainder;\r\n}\r\n\r\nfunction multiply() {\r\n  var input1 = parseInt(document.getElementById(\"t5\").value);\r\n  var input2 = parseInt(document.getElementById(\"t6\").value);\r\n  var result = input1 * input2;\r\n  document.getElementById('multiply-result').textContent = result;\r\n}\r\n\r\nfunction subtract() {\r\n  var input1 = parseInt(document.getElementById(\"t7\").value);\r\n  var input2 = parseInt(document.getElementById(\"t8\").value);\r\n  var result = input1 - input2;\r\n  document.getElementById('subtract-result').textContent = result;\r\n}\r\n<div>\r\n  <h1>Addition</h1>\r\n  <input type=\"text\" id=\"t1\" name=\"t1\"> +\r\n  <input type=\"text\" id=\"t2\" name=\"t2\">\r\n  <input type=\"button\" id=\"add\" value=\"=\" onClick=\"add();\">\r\n  <span id=\"add-result\"></span>\r\n</div>\r\n<div>\r\n  <h1>Subtraction</h1>\r\n  <input type=\"text\" id=\"t7\" name=\"t7\"> -\r\n  <input type=\"text\" id=\"t8\" name=\"t8\">\r\n  <input type=\"button\" id=\"subtract\" value=\"=\" onClick=\"subtract();\">\r\n  <span id=\"subtract-result\"></span>\r\n</div>\r\n<div>\r\n  <h1>Multiplication</h1>\r\n  <input type=\"text\" id=\"t5\" name=\"t5\"> *\r\n  <input type=\"text\" id=\"t6\" name=\"t6\">\r\n  <input type=\"button\" id=\"multiply\" value=\"=\" onClick=\"multiply();\">\r\n  <span id=\"multiply-result\"></span>\r\n</div>\r\n<div>\r\n  <h1>Division</h1>\r\n  <input type=\"text\" id=\"t3\" name=\"t3\"> ÷\r\n  <input type=\"text\" id=\"t4\" name=\"t4\">\r\n  <input type=\"button\" id=\"divide\" value=\"=\" onClick=\"divide();\">\r\n  <span id=\"divide-result\"></span> | \r\n  <span id=\"divide-remainder\"></span>\r\n</div>\r\nfunction add() {\r\n  var input1 = parseInt(document.getElementById(\"t1\").value);\r\n  var input2 = parseInt(document.getElementById(\"t2\").value);\r\n  var result = input1 + input2;\r\n  document.getElementById('add-result').innerHTML = `<i style=\"color: blue\">${result}</i>`;\r\n}\r\n\r\nfunction divide() {\r\n  var input1 = parseInt(document.getElementById(\"t3\").value);\r\n  var input2 = parseInt(document.getElementById(\"t4\").value);\r\n  var result = Math.floor(input1 / input2);\r\n  var remainder = input1 % input2\r\n  document.getElementById('divide-result').innerHTML = `<i style=\"color: blue\">${result}</i>`;\r\n  document.getElementById('divide-remainder').innerHTML = `<i style=\"color: blue\">${remainder}</i>`;\r\n}\r\n\r\nfunction multiply() {\r\n  var input1 = parseInt(document.getElementById(\"t5\").value);\r\n  var input2 = parseInt(document.getElementById(\"t6\").value);\r\n  var result = input1 * input2;\r\n  document.getElementById('multiply-result').innerHTML = `<i style=\"color: blue\">${result}</i>`;\r\n}\r\n\r\nfunction subtract() {\r\n  var input1 = parseInt(document.getElementById(\"t7\").value);\r\n  var input2 = parseInt(document.getElementById(\"t8\").value);\r\n  var result = input1 - input2;\r\n  document.getElementById('subtract-result').innerHTML = `<i style=\"color: blue\">${result}</i>`;\r\n}\r\n<div>\r\n  <h1>Addition</h1>\r\n  <input type=\"text\" id=\"t1\" name=\"t1\"> +\r\n  <input type=\"text\" id=\"t2\" name=\"t2\">\r\n  <input type=\"button\" id=\"add\" value=\"=\" onClick=\"add();\">\r\n  <span id=\"add-result\"></span>\r\n</div>\r\n<div>\r\n  <h1>Subtraction</h1>\r\n  <input type=\"text\" id=\"t7\" name=\"t7\"> -\r\n  <input type=\"text\" id=\"t8\" name=\"t8\">\r\n  <input type=\"button\" id=\"subtract\" value=\"=\" onClick=\"subtract();\">\r\n  <span id=\"subtract-result\"></span>\r\n</div>\r\n<div>\r\n  <h1>Multiplication</h1>\r\n  <input type=\"text\" id=\"t5\" name=\"t5\"> *\r\n  <input type=\"text\" id=\"t6\" name=\"t6\">\r\n  <input type=\"button\" id=\"multiply\" value=\"=\" onClick=\"multiply();\">\r\n  <span id=\"multiply-result\"></span>\r\n</div>\r\n<div>\r\n  <h1>Division</h1>\r\n  <input type=\"text\" id=\"t3\" name=\"t3\"> ÷\r\n  <input type=\"text\" id=\"t4\" name=\"t4\">\r\n  <input type=\"button\" id=\"divide\" value=\"=\" onClick=\"divide();\">\r\n  <span id=\"divide-result\"></span> |\r\n  <span id=\"divide-remainder\"></span>\r\n</div>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65099808.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":12,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"setInterval(function() {\r\n  const number = Math.floor((Math.random() * 100) + 1);\r\n  document.getElementById(\"in02\").innerHTML = number\r\n}, 5000);\r\n\r\nfunction titlep(elem) {\r\n  const aVal = document.getElementById('in02').textContent;\r\n  const elemVal = elem.textContent.replace(/[^0-9]/g, '');\r\n\r\n  elem.title = Number(aVal) * Number(elemVal);\r\n}\r\n<div style=\"cursor: pointer\">\r\n\r\n  <span class=\"tp-cu-po\" onmouseover=\"titlep(this)\">4+  </span><br>\r\n  <span class=\"tp-cu-po\" onmouseover=\"titlep(this)\">3+  </span><br>\r\n  <span class=\"tp-cu-po\" onmouseover=\"titlep(this)\">2+  </span><br>\r\n  <span class=\"tp-cu-po\" onmouseover=\"titlep(this)\">1+  </span><br>\r\n\r\n\r\n\r\n</div><br> A =\r\n<a id=\"in02\"></a>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100024.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'uncheckAllUnsentHandler' is not defined.","line":1,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":24},{"ruleId":"no-unused-vars","severity":2,"message":"'props' is defined but never used.","line":3,"column":29,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":34},{"ruleId":"no-unused-vars","severity":2,"message":"'policy' is defined but never used.","line":4,"column":52,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":58},{"ruleId":"no-undef","severity":2,"message":"'mail' is not defined.","line":5,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'mail' is not defined.","line":6,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":18}],"errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"uncheckAllUnsentHandler = (e) => {\r\n  const newCheckMarkValue = e.target.checked;\r\n  this.setState((prevState, props) => {\r\n    const newUnsentMail = prevState.unsentMail.map(policy => {\r\n      mail.willSend = newCheckMarkValue;\r\n      return mail;\r\n    });\r\n    return {\r\n      unsentMail: newUnsentMail\r\n    }\r\n  });\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100027.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createApp } from 'vue'\r\nimport store from './store'\r\nimport router from './router'\r\nimport App from './App.vue'\r\n\r\nlet app;\r\n\r\nfirebase.auth().onAuthStateChanged(user => {\r\n  console.log(\"user\", user);\r\n  app = createApp(App);\r\n  app.use(store);\r\n  app.use(router);\r\n  app.mount(\"#app\");\r\n});\r\n\r\nimport { createWebHistory, createRouter } from \"vue-router\";\r\nimport Home from \"@/views/Home.vue\";\r\nimport About from \"@/views/About.vue\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    component: Home,\r\n  },\r\n  {\r\n    path: \"/about\",\r\n    name: \"About\",\r\n    component: About,\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nexport default router;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100069.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":1,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'numberOfImages' is assigned a value but never used.","line":3,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"no-unused-vars","severity":2,"message":"'NextImage' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'brojSlika' is not defined.","line":5,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":31}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var bannerImages= $(\".slider_image\");\r\nvar position= 0;\r\nvar numberOfImages= bannerImages.length;\r\nfunction NextImage(){\r\n    if(position+1 >= brojSlika){\r\n        bannerImages.eq(position).css('display', \"none\");\r\n        position= 0;\r\n        bannerImages.eq(position).css('display', \"block\");\r\n    }\r\n    else{\r\n        bannerImages.eq(position).css('display', \"none\");\r\n        position+= 1;\r\n        bannerImages.eq(position).css('display', \"block\");\r\n    }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100392.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":5,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const App = () => {\r\n\r\n  return (\r\n  \r\n    <div>\r\n            <figure style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                backgroundImage: `url(https://placekitten.com/1000/1000)`,\r\n                backgroundSize: 'fit',\r\n                backgroundPosition: 'top',\r\n                width: '100%',\r\n                height: '100%',\r\n                margin: 0\r\n            }}></figure>\r\n      <div style={{  width: '100%', height: '100%', backgroundColor: 'red', position: 'absolute', opacity: '20%'}}> </div>\r\n        <div style={{\r\n            position: 'absolute',\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      transform: 'translate(-50%, -50%)',\r\n                      width: '412px',\r\n            color: 'white'\r\n          }}>\r\n            <h1>Div content</h1>\r\n            <p>Would like to add a backdrop over the parent div</p>\r\n            <p>Make the background a light gray over the image</p>\r\n            <p>As it stands, any background related color I put on this div does not work. (see the backgroundColor set to red on one of the parent divs</p>\r\n\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('app')\r\n);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100405.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'newCityStateObject' is assigned a value but never used.","line":1,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'cities' is not defined.","line":1,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'index' is defined but never used.","line":1,"column":52,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":57}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let newCityStateObject = cities.reduce((acc, item, index) => {\r\n  if (item) {\r\n    // this object has state as key, and the desired output array’s item as value\r\n    const object = acc.obj;\r\n\r\n    // if state not found, create new record\r\n    if (object[item.state] === undefined) {\r\n      const record = { name: item.state, cities: [] }\r\n      object[item.state] = record;\r\n      acc.array.push(record);\r\n    }\r\n\r\n    const record = object[item.state];\r\n    record.cities.push(item.city);\r\n  }\r\n  return acc;\r\n}, { obj: {}, array: [] }).array;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100480.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token html","line":19,"column":11}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"//I just set an interval for every second to check the time again\r\nvar s=setInterval(()=>{\r\n  var today = new Date();\r\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  var dayLight = 0900;\r\n  var lightMode = 1700;\r\n\r\n\r\n  if (time >= dayLight && time <= lightMode) {\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.querySelector(\"h1.example\").style.color = \"black\";\r\n      //console.log(time + \" \" + \"=\" + \" \" + \"Light Mode!\");\r\n  } else {\r\n      document.body.style.backgroundColor = \"black\";\r\n      document.querySelector(\"h1.example\").style.color = \"white\";\r\n      //console.log(time + \" \" + \"=\" + \" \" + \"Dark Mode!\");\r\n  }\r\n},1000)\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <title>Dark Mode Example</title>\r\n    </head>\r\n\r\n    <body>\r\n       \r\n        <h1 class=\"example\">Dark Mode Example</h1>\r\n   \r\n        <p>Test Paragraph</p>\r\n    </body>\r\n    <script src=\"script.js\"></script>\r\n\r\n</html>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100639.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token .","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":".contain {\r\n  height: 100px;\r\n  width: 100px;\r\n  background-color: red;\r\n  overflow: hidden;\r\n}\r\n\r\n.child1 {\r\n  height: 30px;\r\n  width: 30px;\r\n  background-color: blue;\r\n}\r\n\r\n.child2 {\r\n  height: 200px;\r\n  width: 200px;\r\n  background-color: yellow;\r\n  position: absolute;\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65100676.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'event' is defined but never used.","line":10,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":27},{"ruleId":"no-unused-vars","severity":2,"message":"'event' is defined but never used.","line":14,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":27},{"ruleId":"no-unused-vars","severity":2,"message":"'index' is defined but never used.","line":20,"column":58,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":63},{"ruleId":"no-undef","severity":2,"message":"'booleanObject' is not defined.","line":21,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'eventsObject' is not defined.","line":22,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'booleanObject' is not defined.","line":25,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":30},{"ruleId":"no-undef","severity":2,"message":"'booleanObject' is not defined.","line":28,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":30},{"ruleId":"no-undef","severity":2,"message":"'booleanObject' is not defined.","line":29,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":30},{"ruleId":"no-undef","severity":2,"message":"'booleanObject' is not defined.","line":32,"column":44,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":57}],"errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const TEST = (function() {\r\n    let booleans = {\r\n        boolOne: false,\r\n        boolTwo: false,\r\n        boolThree: false\r\n    };\r\n\r\n    let events = {\r\n        clickEvent:\r\n            function(event) {\r\n                //do stuff\r\n            },\r\n        keyEvent:\r\n            function(event) {\r\n                //do other stuff\r\n            }\r\n    };\r\n\r\n    return {\r\n        executesMoreThanOnce: function(booleans, events, index) {\r\n            booleanObject = booleans;\r\n            eventsObject = events;\r\n\r\n            if (i == 2) {\r\n                booleanObject.boolTwo = true;\r\n            }\r\n            else if (i == 4) {\r\n                booleanObject.boolOne = true;\r\n                booleanObject.boolTwo = false;\r\n            }\r\n\r\n            console.log('booleanObject: ', booleanObject);\r\n        },\r\n        get variables() {\r\n            return {\r\n                booleans,\r\n                events\r\n            }\r\n        }\r\n    };\r\n}());\r\n\r\nfor (var i=0; i<5; i++) {\r\n    TEST.executesMoreThanOnce(TEST.variables.booleans, TEST.variables.events, i);\r\n}\r\n","usedDeprecatedRules":[]}]