[{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65086506.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65086828.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Identifier 'regex' has already been declared","line":27,"column":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const tests = [\r\n    {\r\n        str: \"(Value1==6) and or not (Value2==0)?1:0\",\r\n        expect: [\"Value1\", \"Value2\"]\r\n    },\r\n    {\r\n        str: \"Value_1\",\r\n        expect: [\"Value_1\"]\r\n    },\r\n    {\r\n        str: \"(Value_1 * Value_2)\",\r\n        expect: [\"Value_1\", \"Value_2\"]\r\n    },\r\n    {\r\n        str: \"Value_Machine_Outcome==4?1:0\",\r\n        expect: [\"Value_Machine_Outcome\"] // Note I put this in an array\r\n    }\r\n];\r\n\r\nconst regex = /(?!and|or|not)\\b[A-Z]\\w*/gi;\r\nfor (const {str, expect} of tests) {\r\n    const result = str.match(regex);\r\n    const good = result.length === expect.length && result.every((v, i) => v === expect[i]);\r\n    console.log(JSON.stringify(result), good ? \"Ok\" : \"<== ERROR\");\r\n}\r\nconst paragraph = '(Value1==6) and (Value2==0)?1:0';\r\nconst regex = /\\(([^=]+)/g;\r\nconst found = [];\r\nlet match;\r\nwhile (!!(match = regex.exec(paragraph))) {\r\n    found.push(match[1]);\r\n}\r\n\r\nconsole.log(found);\r\n\r\n// expected output: Array [\"Value1\", \"Value2\"]\r\nconst paragraph = '(Value_1==6) and (Value_2==0)?1:0';\r\nconst regex = /\\(([^=]+)/g;\r\nconst found = [];\r\nlet match;\r\nwhile (!!(match = regex.exec(paragraph))) {\r\n    found.push(match[1]);\r\n}\r\n\r\nconsole.log(found);\r\n\r\n// expected output: Array [\"Value1\", \"Value2\"]","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087068.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n    <script src=\"https://unpkg.com/libphonenumber-js@^1.7.6/bundle/libphonenumber-min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n    <label for=\"inputContactNumber\">Contact Number</label>\r\n        <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n\r\n        \r\n            <select class=\"select-country\" class=\"btn contact-btn dropdown-toggle\">\r\n            </select>\r\n        </div>\r\n        <input class=\"input-phone phone-format\" class=\"form-control phone-format\" type=\"text\" name=\"contactNo\" placeholder=\"Enter contact number\" required//>\r\n    </div>\r\n\r\n\r\n<script type=\"text/javascript\">\r\n\r\n    const countries = libphonenumber.getCountries();\r\n    const optionList = countries.map( country => `<option>${country}</option>` );\r\n    $(\".select-country\").html( optionList );\r\n\r\n    $(\".phone-format\").keyup(function () {\r\n        const val_old = $(this).val();\r\n        const newString = new libphonenumber.AsYouType($(\".select-country\").val()).input(val_old);\r\n        $(this).focus().val(newString);\r\n    });\r\n</script>\r\n\r\n\r\n</body>\r\n</html>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087188.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087204.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":3,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"{Searchfile.filter((ids) => user.favorite.includes(ids._id)).map(\r\n  (item, index) => (\r\n    <div\r\n      className=\"row-queue\"\r\n      key={index}\r\n      // onClick={() => handleClick(item, index)}\r\n    >\r\n      <div className=\"column1-queue\">{index + 1}</div>\r\n      <div className=\"column2-queue\">{item.title}</div>\r\n      <div className=\"column3-queue\">{item.singer}</div>\r\n    </div>\r\n  )\r\n)}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087341.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'inp' is not defined.","line":1,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":4},{"ruleId":"no-unused-vars","severity":2,"message":"'evt' is defined but never used.","line":1,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'inp' is not defined.","line":2,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":21},{"ruleId":"no-constant-condition","severity":2,"message":"Unexpected constant condition.","line":4,"column":10,"nodeType":"Literal","messageId":"unexpected","endLine":4,"endColumn":14},{"ruleId":"no-undef","severity":2,"message":"'inp' is not defined.","line":15,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":4},{"ruleId":"no-unused-vars","severity":2,"message":"'evt' is defined but never used.","line":15,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'inp' is not defined.","line":16,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":19},{"ruleId":"no-redeclare","severity":2,"message":"'handleChunk' is already defined.","line":29,"column":10,"nodeType":"Identifier","messageId":"redeclared","endLine":29,"endColumn":21}],"errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"inp.onchange = async (evt) => {\r\n  const stream = inp.files[ 0 ].stream();\r\n  const reader = stream.getReader();\r\n  while( true ) {\r\n    const { done, value } = await reader.read();\r\n    if( done ) { break; }\r\n    handleChunk( value );\r\n  }\r\n  console.log( \"all done\" );\r\n};\r\n\r\nfunction handleChunk( buf ) {\r\n  console.log( \"received a new buffer\", buf.byteLength );\r\n}\r\ninp.onchange = async (evt) => {\r\n  const file = inp.files[ 0 ];\r\n  const chunksize = 64 * 1024;\r\n  let offset = 0;\r\n  while( offset < file.size ) {\r\n    const chunkfile = await file.slice( offset, offset + chunksize );\r\n    // Blob.arrayBuffer() can be polyfilled with a FileReader\r\n    const chunk = await chunkfile.arrayBuffer();\r\n    handleChunk( chunk );\r\n    offset += chunksize;\r\n  }\r\n  console.log( \"all done\" );\r\n};\r\n\r\nfunction handleChunk( buf ) {\r\n  console.log( \"received a new buffer\", buf.byteLength );\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087435.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token >","line":5,"column":15}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"add_filter('woocommerce_coupon_get_discount_amount', 'woocommerce_discount_from_the_original_price', 10, 5 );\r\n\r\nfunction woocommerce_discount_from_the_original_price( $discount, $discounting_amount, $cart_item, $single, $coupon ) {\r\n\r\n  if ($coupon->discount_type == 'percent' && $coupon->code == 'fifty') {\r\n\r\n    $discount_percentage = $coupon->amount / 100;\r\n    $item                = wc_get_product($cart_item['product_id']);\r\n\r\n    if ($item) {\r\n      if ( $item->is_type( 'simple' ) ) {\r\n        $sale_price    = $item->sale_price;\r\n        $regular_price = $item->regular_price;\r\n        if ( ($sale_price && $regular_price) && ($sale_price !==  $regular_price) ) {\r\n          $discount_from_regular_price = $regular_price * $discount_percentage; \r\n          $discount = $discounting_amount - ($discount_from_regular_price * $cart_item['quantity']); \r\n        }\r\n\r\n      } elseif ( $item->is_type( 'variable' ) ) {\r\n        $variable_product = new WC_Product_Variation( $cart_item[\"variation_id\"] );\r\n        $sale_price    = $variable_product->sale_price;\r\n        $regular_price = $variable_product->regular_price;\r\n        \r\n        if ( ($sale_price && $regular_price) && ($sale_price !==  $regular_price) ) {\r\n          $discount_from_regular_price = $regular_price * $discount_percentage;\r\n          $discount = $discounting_amount - ($discount_from_regular_price * $cart_item['quantity']);\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  return $discount;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087602.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'sweetAlertConfirmationMessage' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":39},{"ruleId":"no-undef","severity":2,"message":"'Swal' is not defined.","line":2,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'T' is not defined.","line":3,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'T' is not defined.","line":7,"column":29,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":30},{"ruleId":"no-undef","severity":2,"message":"'T' is not defined.","line":8,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":29},{"ruleId":"no-undef","severity":2,"message":"'T' is not defined.","line":9,"column":27,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'T' is not defined.","line":10,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":29}],"errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function sweetAlertConfirmationMessage(message) {\r\n    return Swal.fire({\r\n        title: T('SWEETALERT_GENERAL_CONFIRMATION_TITLE'),\r\n        text: message,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: T('SWEETALERT_CONFIRM_BUTTON_COLOR'),\r\n        cancelButtonColor: T('SWEETALERT_CANCEL_BUTTON_COLOR'),\r\n        cancelButtonText: T('SWEETALERT_CANCEL_BUTTON_TEXT'),\r\n        confirmButtonText: T('SWEETALERT_CONFIRM_BUTTON_TEXT'),\r\n    })\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65087883.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<input type=\"number\" id=\"field1\" onfocusout=\"validateField(0, 100, 'field1')\"/><br/><br/>\r\n    <input type=\"number\" id=\"field2\" onfocusout=\"validateField(200, 300, 'field2')\"/><br/><br/>\r\n    <input type=\"number\" id=\"field3\" onfocusout=\"validateField(400, 500, 'field3')\"/><br/><br/>\r\n    <script>\r\n        function validateField(min, max, id) {\r\n            const value = document.getElementById(id).value;\r\n            if (value < min || value > max) {\r\n                document.getElementById(id).style.borderColor = \"red\";\r\n            }\r\n            else {\r\n                document.getElementById(id).style.borderColor = \"lime\";\r\n            }\r\n        }\r\n    </script>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088376.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088386.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '#'","line":31,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const images = [{\r\n    \"url\": \"https://picsum.photos/id/1020/367/267\",\r\n    \"title\": \"Bear on a mountain\",\r\n    \"description\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n  },\r\n  {\r\n    \"url\": \"https://picsum.photos/id/1024/367/267\",\r\n    \"title\": \"Eagle in flight\",\r\n    \"description\" : \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n  },\r\n  {\r\n    \"url\": \"https://picsum.photos/id/1025/367/267\",\r\n    \"title\": \"Doggie in a blanket\",\r\n    \"description\" : \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\"    \r\n  }\r\n];\r\nconst html = images.map((img, i) => `<img src=\"${img.url}\" title=\"${img.title}\" data-idx=\"${i}\"/>`);\r\nconst container = document.getElementById(\"container\");\r\nconst modal = document.getElementById(\"modal\");\r\ncontainer.innerHTML = html.join(\" \");\r\ncontainer.addEventListener(\"click\", function(e) {\r\n  const tgt = e.target;\r\n  if (tgt.tagName == \"IMG\") {\r\n    const idx = tgt.dataset.idx; console.log(idx, images[idx].title)\r\n    modal.querySelector(\".title\").innerHTML = images[idx].title;\r\n    modal.querySelector(\".desc\").innerHTML = images[idx].description;\r\n    modal.classList.remove(\"hide\");\r\n  }\r\n})\r\nmodal.querySelector(\".close\").addEventListener(\"click\",function() { modal.classList.add(\"hide\") })\r\n#modal {\r\n  position: absolute;\r\n  top: 100px;\r\n  left: 100px;\r\n  border: 1px solid red;\r\n  height: 200px;\r\n  overflow: auto;\r\n  width: 300px;\r\n  background-color: white;\r\n  padding: 3px;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n#container img { cursor: pointer; }\r\n\r\n.close { float:right; }","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088567.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token .","line":92,"column":4}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"    var m3 = document.getElementById('m3')\r\n    var m1 = document.getElementById('m1')\r\n    var m2 = document.getElementById('m2')\r\n        \r\n    var m1Top = 300\r\n    var m1left =50\r\n\r\n    var m1TopTemp\r\n    var m1leftTemp\r\n\r\n    var m1Verif = false\r\n    var m2Verif = false\r\n    var m3Verif = false\r\n\r\n    \r\n    var m2Top = 100\r\n    var m2Transform =-30\r\n    var m2left =150\r\n\r\n    var m3Top = 100\r\n    var m3left =450\r\n\r\n    var hoverFrame\r\n    var leaveFrame\r\n    function hover() {\r\n        clearInterval(leaveFrame);\r\n        m1Verif=false\r\n        m2Verif=false\r\n        m3Verif=false\r\n        hoverFrame = setInterval(frame, 5);\r\n    }\r\n    function leave() {\r\n        clearInterval(hoverFrame);\r\n        m1Verif=true\r\n        m2Verif=true\r\n        m3Verif=true\r\n        leaveFrame = setInterval(frameReverse, 5);\r\n    }\r\n      function frame() {\r\n        if(m1Top == 100 && m1left==250){\r\n            m1Verif = true\r\n        }else{\r\n            if(m1left!=250){m1left++;}  \r\n            if(m1Top!=100){m1Top--;}  \r\n            m1.style.left = m1left + 'px';\r\n            m1.style.top = m1Top + 'px'; \r\n        }\r\n\r\n        if(m2Top == 100 && m2left == 550 && m2Transform == 0){\r\n            m2Verif=true\r\n        }else{\r\n            if(m2left!=550){m2left++;}  \r\n            if(m2Transform!=0){m2Transform++;} \r\n            m2.style.left = m2left + 'px';\r\n            m2.style.transform = 'rotate('+m2Transform+'deg)'; \r\n        }\r\n\r\n        if(m3Top == 100 && m3left == 895){\r\n            m3Verif=true\r\n        }else{\r\n            if(m3left!=8950){m3left++;} \r\n            m3.style.left = m3left + 'px'; \r\n        }\r\n        if(m1Verif==true && m2Verif == true && m3Verif == true){clearInterval(hoverFrame);}\r\n    }\r\n    \r\n    function frameReverse() {\r\n        if(m1Top == 300 && m1left==50){\r\n            m1Verif = false\r\n        }else{\r\n            if(m1left!=50){m1left--;}  \r\n            if(m1Top!=300){m1Top++;}  \r\n            m1.style.left = m1left + 'px';\r\n            m1.style.top = m1Top + 'px'; \r\n        }\r\n        if(m2Top == 100 && m2left == 150 && m2Transform == -30){\r\n            m2Verif=false\r\n        }else{\r\n            if(m2left!=150){m2left--;}  \r\n            if(m2Transform!=-30){m2Transform--;} \r\n            m2.style.left = m2left + 'px';\r\n            m2.style.transform = 'rotate('+m2Transform+'deg)'; \r\n        }\r\n        if(m3Top == 100 && m3left == 450){\r\n            m3Verif = false\r\n        }else{\r\n            if(m3left!=450){m3left--;} \r\n            m3.style.left = m3left + 'px'; \r\n        }\r\n        if(m1Verif == false && m2Verif ==false && m3Verif == false){clearInterval(leaveFrame);}\r\n    }\r\n   .milktea {\r\n      background: url(\"https://my-test-11.slatic.net/p/89d20ca95994d8a252a6430c7b27e6fc.jpg\") no-repeat center center;\r\n      display: table;\r\n      height: auto;\r\n      position: relative;\r\n      width: 100%;\r\n      background-size: cover;\r\n      padding: 0;\r\n      margin: 0;\r\n    }\r\n\r\n    .mtitle {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        color: white;\r\n        font-size: xx-large;\r\n        font-family: brandon-grotesque, sans-serif;\r\n        font-weight: bold;\r\n        font-style: normal;\r\n    }\r\n    .mtitle:hover {\r\n        color:rgba(30, 144, 255,0.7);\r\n        cursor: pointer;\r\n    }\r\n    .m1 {\r\n      position: absolute;\r\n      width: 150px;\r\n      height: auto;\r\n      top: 300px;\r\n      left: 50px;\r\n    }\r\n\r\n    .m2 {\r\n      position: absolute;\r\n      width: 250px;\r\n      height: auto;\r\n      top: 100px;\r\n      left: 150px;\r\n      transform: rotate(-30deg);\r\n    }\r\n\r\n    .m3 {\r\n      position: absolute;\r\n      width: 250px;\r\n      height: auto;\r\n      top: 100px;\r\n      left: 450px;\r\n    }\r\n    .m3A{\r\n        background-color: red;\r\n        animation-name: example;\r\n        animation-duration: 4s;\r\n    }\r\n    @keyframes m3{\r\n        100%{\r\n            top:102px;\r\n            left: 30%;\r\n        }\r\n    }","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088715.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token","line":13,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function countdown(time_p) {\r\n  var time = sessionStorage.getItem('saved_countdown');\r\n\r\n  if (time) {\r\n    time = +time; // cast the string to number\r\n  }\r\n  else {\r\n    // Set the time we're counting down to using the time allowed\r\n    var new_countdown = new Date().getTime() + (time_p + 2) * 1000;\r\n    time = new_countdown;\r\n    sessionStorage.setItem('saved_countdown', new_countdown);\r\n  } \r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088737.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":17,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function MenuBarGame(props) {\r\n  const [click, setClick] = useState(false);\r\n  const dropdown = useRef();\r\n  const btn = useRef();\r\n\r\n  useEffect(() => {\r\n    if (click)\r\n      btn.current.style.marginBottom = `${dropdown.current.offsetHeight}px`;\r\n    else btn.current.style.marginBottom = 0;\r\n  }, [click]);\r\n\r\n  function handleDropdown() {\r\n    setClick(!click);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li>\r\n          <button className=\"gameButton\" onClick={handleDropdown} ref={btn}>\r\n            <img src={Logo} /> {props.data.name}\r\n          </button>\r\n          {click ? (\r\n            <div className=\"dropdown-content\" ref={dropdown}>\r\n              <button>* Duel</button>\r\n              <button>* Events</button>\r\n              <button>* Leaderboard</button>\r\n            </div>\r\n          ) : null}\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default MenuBarGame;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088811.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token elementReplace","line":1,"column":10}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"FUNCTION elementReplace(arr, obj)\r\n  result <- []\r\n  FOR elemKey in arr DO:\r\n     IF elemKey is a key of obj THEN:\r\n       push obj[elemKey] to result\r\n     ELSE:\r\n       push elemKey to result\r\n     END IF\r\n  END FOR\r\nEND FUNCTION\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088834.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":1,"column":19}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"   donglePaired() {\r\n        return new Promise( function(resolve, reject) { \r\n            if (Platform.OS !=='ios'){\r\n              var pairedDevices = await BluetoothScanner.getPairedDevices();\r\n              console.log('Sending........');\r\n              let data={\r\n                  data:pairedDevices,\r\n              };\r\n              new Api().fetch(\"bluetoothCheck\",{devices:JSON.stringify(data),userid:this.state.probe.UID},(result) => {\r\n                  if (!result.err) reject(false);\r\n                  console.log(\"Dongle already paired\");\r\n                  resolve(true);\r\n                  //logNetworkState\r\n              });\r\n            }\r\n            reject(false);\r\n        });  \r\n     }\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088860.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token =","line":14,"column":16}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"class Navbar extends Component {\r\n  constructor() {\r\n    super(); // super allows you to access parent class's methods and allows us to use \"this.\" in constructor().\r\n    this.state = {\r\n      clicked: false,\r\n      scrolled: false,\r\n    };\r\n    // Note here too these bindings are necessary to make `this` work in the callback\r\n    // In general, we use binding whenever we use \"setState\" when handling an event\r\n    this.handleSroll = this.handleScroll.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const offset = window.scrollY;\r\n    if (offset > 200) {\r\n      this.setState({ scrolled: !this.state.scrolled });\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ clicked: !this.state.clicked });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onScroll={this.handleScroll}>\r\n        {/* Note here this.scroll.scrolled changes to this.state.scrolled */}\r\n        <nav\r\n          className={this.state.scrolled ? \"NavbarItems\" : \"NavbarItems Scroll\"}\r\n        >\r\n          <h1 className=\"navbar-logo\">\r\n            React <i className=\"fab fa-react\"></i>\r\n          </h1>\r\n          <div className=\"menu-icon\" onClick={this.handleClick}>\r\n            <i\r\n              className={this.state.clicked ? \"fas fa-times\" : \"fas fa-bars\"}\r\n            ></i>\r\n          </div>\r\n          <ul className={this.state.clicked ? \"nav-menu active\" : \"nav-menu\"}>\r\n            {MenuItems.map((items, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <a className={items.cName} href={items.url}>\r\n                    {items.title}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Button> Contact US </Button>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088912.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":2,"column":22}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Start class CreateTurnQueue\r\ninitQueue(list = {}) {\r\n   \r\n   const newMap = new Map();\r\n   \r\n   // Both Object and Map has entries method although the order is different\r\n   const iterator = list.entries();\r\n   \r\n   for(const item of iterator) {\r\n      const [point, creature] = item;\r\n      newMap.set(point, creature);\r\n      this.creatureArray.push(creature);\r\n   }\r\n   this.creatureMap = newMap;\r\n   \r\n}\r\n// End class CreateTurnQueue\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65088978.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65089094.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n<div>\r\n  <select name=\"selectProgram[]\" class=\"js-example-basic\">\r\n    <option value=\"\">Choose tour</option>\r\n    <option value=\"Tour1\">Tour 1</option>\r\n    <option value=\"Tour2\">Tour 2</option>\r\n    <option value=\"Tour3\">Tour 3</option>\r\n  </select>\r\n  <textarea name=\"tourText[]\" class=\"form-control textArea\" placeholder=\"Tour description\"></textarea>\r\n</div>\r\n<div>\r\n  <select name=\"selectProgram[]\" class=\"js-example-basic\">\r\n    <option value=\"\">Choose tour</option>\r\n    <option value=\"Tour1\">Tour 1</option>\r\n    <option value=\"Tour2\">Tour 2</option>\r\n    <option value=\"Tour3\">Tour 3</option>\r\n  </select>\r\n  <textarea name=\"tourText[]\" class=\"form-control textArea\" placeholder=\"Tour description\"></textarea>\r\n</div>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65089152.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<input type=\"radio\"\r\n       name=\"contact-option\"\r\n       id=\"1\"\r\n       class=\"with-gap\"\r\n       [(ngModel)]=\"contact\"\r\n       value=\"cell\"> Cell\r\n<input type=\"radio\"\r\n       name=\"contact-option\"\r\n       id=\"2\"\r\n       class=\"with-gap\"\r\n       [(ngModel)]=\"contact\"\r\n       value=\"email\"> Email\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65089236.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\r\n  <div id=\"app\">\r\n    <nav>navbar</nav>\r\n    <main id=\"listen\">main</main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"App\",\r\n  created() {\r\n    document.addEventListener(\"scroll\", this.listenScroll);\r\n  },\r\n  destroyed() { // remember to remove the listener when destroy the components\r\n    document.removeEventListener(\"scroll\", this.listenScroll);\r\n  },\r\n  methods: {\r\n    listenScroll() {\r\n      let myScroll = document.querySelector(\"#listen\").getBoundingClientRect()\r\n        .top;\r\n      console.log(myScroll);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nnav {\r\n  height: 100px;\r\n}\r\nmain {\r\n  height: 700px;\r\n}\r\n</style>\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65089287.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65089641.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token IPerson","line":1,"column":11}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"interface IPerson {\r\n  id?: string; // ID is optional (use of ? operator)\r\n  name: string; // Name is Required\r\n  age: number;\r\n}\r\n\r\nconst persons: Array<IPerson> = [\r\n  { name: \"John\", age: 12 },\r\n  { name: \"Ben\", age: 20 }\r\n];\r\n\r\n// Both are same: Array<IPerson> === IPerson[]\r\nconst fun = (info: Array<IPerson>) => {\r\n  //You will get intellisense here\r\n  console.log(info[0].name);\r\n};\r\n\r\ninterface IPerson {\r\n  id?: string; // ID is optional (use of ? operator)\r\n  name: string; // Name is Required\r\n  age: number;\r\n}\r\n\r\nconst persons: Array<Partial<IPerson>> = [\r\n  { name: \"John\" }, // You can do it.\r\n  { name: \"Ben\", age: 20 }\r\n];\r\n\r\n// Both are same: Array<IPerson> === IPerson[]\r\nconst fun = (info: Partial<IPerson>[]) => {\r\n  //You will get intellisense here\r\n  console.log(info[0].name);\r\n};\r\n\r\nconst is_valid_person = (person: any): Boolean => {\r\n  return (\r\n    typeof person === \"object\" &&\r\n    typeof person.name === \"string\" &&\r\n    typeof person.age === \"number\" &&\r\n    person.name.length >= 5 &&\r\n    person.age >= 1\r\n  );\r\n};\r\n\r\nconsole.log(\"Is person valid: \", is_valid_person({}));\r\nconsole.log(\"Is person valid: \", is_valid_person(\"Invalid Person\"));\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65089760.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":18,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let button = document.getElementById('button');\r\nlet text = document.getElementById('text');\r\nlet body = document.querySelector('body');\r\nlet number = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F'];\r\n\r\nbutton.addEventListener('click', colorChange);\r\n\r\nfunction colorChange() {\r\n  let hex = '#';\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    const index = Math.floor(Math.random() * number.length);\r\n    hex += number[index];\r\n  }\r\n  text.textContent = hex;\r\n  body.style.backgroundColor = hex;\r\n}\r\n<!DOCTYPE html>\r\n\r\n<html lang=\"en\">\r\n\r\n<body>\r\n    <h1 id=\"text\">Background Color</h1>\r\n    <button id=\"button\">Change BG-Color</button>\r\n    <script src=\"script.js\"></script>\r\n</body>\r\n\r\n</html>","usedDeprecatedRules":[]}]