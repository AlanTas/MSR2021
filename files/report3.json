[{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65094629.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token function","line":1,"column":12}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"    public function buildForm(FormBuilderInterface $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('title', TextType::class, [\r\n                'row_attr' => [\r\n                    'class' => 'form-group'\r\n                ],\r\n                'attr' => [\r\n                    'class' => 'form-control'\r\n                ],\r\n                'required' => false\r\n            ])\r\n            ->add('url', UrlType::class, [\r\n                'row_attr' => [\r\n                    'class' => 'form-group'\r\n                ],\r\n                'attr' => [\r\n                    'class' => 'form-control'\r\n                ],\r\n                'required' => false\r\n            ])\r\n            ->add('file', FileType::class, [\r\n                'row_attr' => [\r\n                    'class' => 'form-group'\r\n                ],\r\n                'attr' => [\r\n                    'class' => 'form-control'\r\n                ]\r\n            ]);\r\n    }\r\n\r\n{% block body %}\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card card-default\">\r\n                <div class=\"card-body\">\r\n                    {{ form_start(form) }}\r\n                        <div class=\"slides\" data-prototype=\"{{ form_widget(form.slides.vars.prototype)|e('html_attr') }}\">\r\n                            {% for slide in form.slides %}\r\n                                <div class=\"slide\">\r\n                                    {{ form_row(slide.title) }}\r\n                                    {{ form_row(slide.url) }}\r\n                                    {{ form_row(slide.file) }}\r\n                                </div>\r\n                            {% endfor %}\r\n                        </div>\r\n\r\n                    <button type=\"button\" class=\"btn btn-success add_item_link\" data-collection-holder-class=\"slides\">+</button>\r\n                    <button type=\"button\" class=\"btn btn-danger remove_item_link\" data-collection-holder-class=\"slides\">-</button>\r\n\r\n                    <div class=\"form-footer pt-4 pt-5 mt-4 border-top\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-default\">Save</button>\r\n                    </div>\r\n\r\n                    {{ form_end(form) }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n{% endblock %}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65094672.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'rollDieAsync' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":22},{"ruleId":"no-undef","severity":2,"message":"'getPseudoRandomInt' is not defined.","line":2,"column":10,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":28}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function rollDieAsync() {\r\n  return getPseudoRandomInt()\r\n    .then(random => {\r\n      var dieVal = (random % 6) + 1\r\n      var reroll = random > 251\r\n      if(reroll){\r\n        return rollDieAsync()\r\n      }else{\r\n        return dieVal\r\n      }\r\n   })\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65094871.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":10,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var savestart = false;   \r\n$(\"#jqGrid\").jqGrid({\r\n    beforeSubmitCell : function( id, name, val, irow,icol) {\r\n        savestart = true;\r\n    },\r\n    afterSubmitCell : function() {\r\n        savestart = false; \r\n        return [true,\"\"];\r\n    },\r\n    ....\r\n });\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65094953.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'distribution_bins' is not defined.","line":3,"column":15,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":32},{"ruleId":"no-unused-vars","severity":2,"message":"'distribution_data' is assigned a value but never used.","line":10,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":24}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Create keys for the properties of the objects. This uses the offset\r\n// of the start of the property as its key.\r\nlet jsonify = distribution_bins.replace(/{/g, \"[\");\r\njsonify = jsonify.replace(/}/g, \"]\");\r\n\r\n// Wrap +INF in quotes.\r\njsonify = jsonify.replace(/\\+INF/g, `\"+INF\"`);\r\n\r\n// Parse.\r\nconst distribution_data = JSON.parse(jsonify);\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65094997.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65095058.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":34,"column":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const data = [\r\n  {\r\n    code: \"prod1\",\r\n    quantity: 13,\r\n    pricePerItem: 10,\r\n    totalCost: 130\r\n  },\r\n  {\r\n    code: \"prod1\",\r\n    quantity: 7,\r\n    pricePerItem: 11,\r\n    totalCost: 77\r\n  },\r\n  {\r\n    code: \"prod2\",\r\n    quantity: 10,\r\n    pricePerItem: 9,\r\n    totalCost: 90\r\n  },\r\n  {\r\n    code: \"prod2\",\r\n    quantity: 9,\r\n    pricePerItem: 10,\r\n    totalCost: 90\r\n  }\r\n];\r\n\r\nconsole.log(\r\n  data.reduce((acc, current) => {\r\n    if (!acc[current.code]) {\r\n      acc[current.code] = { quantity: 0, total: 0 };\r\n    }\r\n    return {\r\n      ...acc,\r\n      [current.code]: {\r\n        quantity: acc[current.code].quantity + current.quantity,\r\n        total: acc[current.code].total + current.totalCost\r\n      }\r\n    };\r\n  }, {})\r\n);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65095422.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65095448.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'styleFunction' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'ol' is not defined.","line":3,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'ol' is not defined.","line":4,"column":15,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'ol' is not defined.","line":7,"column":15,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":17},{"ruleId":"no-undef","severity":2,"message":"'ol' is not defined.","line":11,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":26}],"errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function styleFunction(feature) {\r\n  var iconUrl = feature.get('iconUrl');\r\n  var defaultStyle = new ol.style.Style({\r\n    fill: new ol.style.Fill({\r\n    color: \"green\"\r\n  }),\r\n  stroke: new ol.style.Stroke({\r\n   color: \"green\",\r\n   width: 1.2\r\n  }),\r\n  image: iconUrl ? new ol.style.Icon({\r\n   scale: 0.1,\r\n   src: iconUrl\r\n  }) : undefined\r\n });\r\n return [defaultStyle];\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65095449.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":9,"column":39}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const items = \r\n  [ { group: \"group_1\", text: \"Text 1\",  value: \"1\"  } \r\n  , { group: \"group_2\", text: \"Text 1\",  value: \"21\" } \r\n  , { group: \"group_1\", text: \"Text 2\",  value: \"2\"  } \r\n  , { group: \"group_1\", text: \"Text 3\",  value: \"3\"  } \r\n  , {                   text: \"Text 30\", value: \"30\" } \r\n  ] \r\n\r\nconst groups = items.reduce((r,{group,...other})=>\r\n  {\r\n  if (!group) return r\r\n  let grp = r.find(x=>x.some(z=>z.group===group))\r\n  if (!grp) r.push([{group,...other}])\r\n  else grp.push( {group,...other} )\r\n  return r\r\n  }\r\n  ,[])\r\n\r\nconsole.log( groups ) \r\nconst items = \r\n  [ { group: \"group_1\", text: \"Text 1\",  value: \"1\"  } \r\n  , { group: \"group_2\", text: \"Text 1\",  value: \"21\" } \r\n  , { group: \"group_1\", text: \"Text 2\",  value: \"2\"  } \r\n  , { group: \"group_1\", text: \"Text 3\",  value: \"3\"  } \r\n  , {                   text: \"Text 30\", value: \"30\" } \r\n  ] \r\n       \r\nconst groups = items.reduce((r, { group, ...other})=>\r\n  {\r\n  if (!group) return r\r\n  let grp = r.find(x=>x.group===group)\r\n  if (!grp) \r\n    {\r\n    grp = { group, elements:[] }\r\n    r.push(grp)\r\n    }\r\n  grp.elements.push({...other})\r\n  return r\r\n  }\r\n  ,[]);\r\n\r\nconsole.log(  groups )","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096038.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ;","line":9,"column":44}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const minInterval = 5000;       // 5 seconds (for example)\r\nlet lastResult = null;          // Last result provided\r\nlet nextAvailable = Date.now(); // When the next can be provided\r\nfunction onceEvery() {\r\n    const now = Date.now();\r\n    if (now < nextAvailable) {\r\n        return lastResult;\r\n    }\r\n    lastResult = /*...calculate result...*/;\r\n    nextAvailable = now + minInterval;\r\n    return lastResult;\r\n}\r\n\r\nconst minInterval = 5000;       // 5 seconds (for example)\r\nlet lastResult = null;          // Last result provided\r\nlet nextAvailable = Date.now(); // When the next can be provided\r\nfunction onceEvery() {\r\n    const now = Date.now();\r\n    if (now < nextAvailable) {\r\n        console.log(Date.now(), \"Too soon, returning last value:\", lastResult);\r\n        return lastResult;\r\n    }\r\n    lastResult = (lastResult || 0) + 1;\r\n    nextAvailable = now + minInterval;\r\n    console.log(Date.now(), \"Calculated new value:\", lastResult);\r\n    return lastResult;\r\n}\r\n\r\n// Call it every second or so\r\nsetInterval(onceEvery, 1000);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096079.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token case","line":12,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"switch (sort) {\r\n    case 'color':\r\n    case 'type':\r\n        newShirtArray = shirts.sort(/* ... */);\r\n        break;\r\n\r\n    case 'size':\r\n        newShirtArray = shirts.sort(/* ... */);\r\n        break;\r\n}\r\n\r\ncase 'color':\r\ncase 'type':\r\n    newShirtArray = shirts.sort((s1, s2) => {\r\n        if (s1[sort] > s2[sort]) {\r\n            return 1;\r\n        } else if (s1[sort] < s2[sort]) {\r\n            return -1;\r\n        } else {\r\n           return 0;\r\n        }\r\n    });\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096304.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"  const tableColumns = [\r\n   // ..other columns\r\n  {\r\n    title: \"Password\",\r\n    field: \"password\",\r\n    editComponent: ({ value, onChange }) => (\r\n      <input\r\n        type=\"text\"\r\n        value={value || \"\"}\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    ),\r\n\r\n    render: (rowData) => (\r\n      <input\r\n        type=\"password\"\r\n        value={rowData.password}\r\n        readOnly />\r\n    )\r\n  }\r\n];\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096347.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<div class=\"row\">\r\n    <div class=\"col-12 col-md-4\">\r\n        <div class=\"card\">#1</div>\r\n        <div class=\"card\">#4</div>\r\n    </div>\r\n    <div class=\"col-12 col-md-4\">\r\n        <div class=\"card\">#2</div>\r\n        <div class=\"card\">#5</div>\r\n    </div>\r\n    <div class=\"col-12 col-md-4\">\r\n        <div class=\"card\">#3</div>\r\n    </div>\r\n</div>\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096357.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token User","line":1,"column":6}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"type User {\r\n  id: ID!\r\n  phoneNumber: String!\r\n}\r\n\r\ntype Query {\r\n  user(id: String!): User!\r\n}\r\n\r\ntype UpdateUserPayload {\r\n  user: User!\r\n}\r\n\r\ntype Mutation {\r\n  updateUser(id: String!, phoneNumber: String!): UpdateUserPayload!\r\n}\r\n\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst USER_QUERY = gql`\r\n  query GetUser($id: String!) {\r\n    user(id: $id) {\r\n      __typename\r\n      id\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserComponent = ({ userId }) => {\r\n  const { loading, error, data } = useQuery(USER_QUERY, {\r\n    variables: { id: userId },\r\n  });\r\n\r\n  if (loading) return null;\r\n  if (error) return `Error! ${error}`;\r\n\r\n  return <div>{data.user.phoneNumber}</div>;\r\n}\r\n\r\n// schema.js\r\nexport const typeDefs = gql`\r\n  type DataToKeep {\r\n    # anything here\r\n  }\r\n\r\n  extend type Query {\r\n    dataToKeep: DataToKeep # probably nullable?\r\n  }\r\n`;\r\n\r\n// cache.js\r\nexport const dataToKeepVar = makeVar(null);\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        dataToKeep: {\r\n          read() {\r\n            return dataToKeepVar();\r\n          } \r\n        },\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst DATA_QUERY = gql`\r\n  query dataToKeep {\r\n    dataToKeep @client {\r\n      # anything here\r\n    }\r\n  }\r\n`;\r\n\r\nconst AnyComponent = ({ userId }) => {\r\n  const { loading, error, data } = useQuery(DATA_QUERY);\r\n\r\n  if (loading) return null;\r\n  if (error) return `Error! ${error}`;\r\n\r\n  return <div>{JSON.stringify(data.dataToKeep)}</div>;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096491.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst customStyle = {\r\n  color : \"red\"\r\n\r\n}\r\n\r\nconst dStyle = {\r\n  backgroundImage : \"url(https://wallpapercave.com/wp/wp2771916.jpg)\",\r\n}\r\n\r\nReactDOM.render(\r\n<div style = {dStyle}>\r\n  <h1 style = {customStyle}>Hello World!\r\n  </h1>\r\n  </div>, document.getElementById(\"root\"));\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65096606.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token .","line":40,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"google.charts.load('current', { 'packages': ['line'] });\r\ngoogle.charts.setOnLoadCallback(drawChart);\r\n\r\nfunction drawChart() {\r\n  var data = new google.visualization.DataTable();\r\n  data.addColumn('string', 'Day');\r\n  data.addColumn('number', 'Yes');\r\n  data.addColumn('number', 'No');\r\n\r\n  data.addRows([\r\n    ['19/11/2020 \\n 02:48:16', 1.2, 1.6],\r\n    ['19/11/2020 \\n 02:48:22', 1.2, 1.6],\r\n    ['19/11/2020 \\n 02:48:28', 1.3, 1.6]\r\n  ]);\r\n\r\n  var options = {\r\n    legend: {\r\n      position: 'none'\r\n    },\r\n    height: '100%',\r\n    width: '100%',\r\n    vAxis: {\r\n      viewWindow: {\r\n        min: 1,\r\n        max: 1.95,\r\n      }\r\n    },\r\n    colors: ['#1976D2','#E53935']\r\n  };\r\n\r\n  var chart = new google.charts.Line(document.getElementById('linechart_material'));\r\n  chart.draw(data, google.charts.Line.convertOptions(options));\r\n\r\n  $('#legend tr').hover(function () {\r\n    chart.setSelection([{ column: $(this).data('column'), row: null }]);\r\n  }, function () {\r\n    chart.setSelection([]);\r\n  })\r\n}\r\n.color {\r\n        width: 2.5rem;\r\n        height: 1.5rem;\r\n        border-radius: 0.1875rem;\r\n    }\r\n\r\n    #linechart_material {\r\n        width: 500px;\r\n        height:200px;\r\n        padding-top:5px;\r\n    }\r\n    \r\n    .title {\r\n    margin-bottom: -0.0005rem;\r\n}\r\n\r\n.subtitle {\r\n    color: gray;\r\n    font-size: 16px;\r\n}\r\n\r\n.state {\r\n    width: 2.5rem;\r\n    height: 1.5rem;\r\n    border-radius: 0.1875rem;\r\n    color: white;\r\n    margin-left: 3px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n    padding-bottom: 4px;\r\n    font-weight: 600;\r\n}\r\n\r\n.state-open {\r\n    background-color: #00ba54;\r\n}\r\n\r\n.state-closed {\r\n    background-color: #d00000;\r\n}\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n<script src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n<div id=\"linechart_material\"></div>\r\n\r\n\r\n<table class=\"table-hover\">\r\n  <tbody id=\"legend\">\r\n    <tr data-column=\"1\">\r\n      <td>\r\n        <div class=\"color\" style=\"background-color:#1976D2\"></div>\r\n      </td>\r\n      <td style=\"padding-left:20px; padding-right:20px; padding-top:5px; padding-bottom:5px;\">\r\n        Yes\r\n      </td>\r\n      <td>\r\n        1.3\r\n      </td>\r\n    </tr>\r\n    <tr data-column=\"2\">\r\n      <td>\r\n        <div class=\"color\" style=\"background-color:#E53935\"></div>\r\n      </td>\r\n      <td style=\"padding-left:20px; padding-right:20px; padding-top:5px; padding-bottom:5px;\">\r\n        No\r\n      </td>\r\n      <td>\r\n        1.6\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097032.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":2,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":2},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":4,"column":443,"nodeType":"TemplateElement","messageId":"unnecessaryEscape","endLine":4,"endColumn":444,"suggestions":[{"messageId":"removeEscape","fix":{"range":[495,496],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[495,495],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'deleteCard' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":20}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\n$(\".create\").click(function(){\r\n  let element = `\r\n      <div id=\"card\" class=\"card col- 3\" style=\"width:18rem;style=\"margin-right=3%; margin-right=3%\"><img src=\"...\" class=\"card-img-top\" alt=\"...\" id=\"image\"+String(cnt)><div class=\"card-body\"><h5 class=\"card-title\" id=\"title\" contentEditable=\"true\">Card title</h5><p class=\"card-text\" id=\"desc\" contentEditable=\"true\">Some quick example text to build on the card title and make up the                     bulk of the'                    card\\'s content.</p><a href=\"#\" class=\"btn btn-primary\" id=\"button\"+ String(cnt) >Go somewhere</a><a href=\"#\" class=\"close\" onclick='deleteCard(this)'>Delete</a></div></div>`;\r\n  document.getElementById(\"lastRow\").innerHTML+=element;\r\n});\r\n\r\nfunction deleteCard(delBtn){\r\n  delBtn.parentNode.parentNode.hidden = true\r\n}\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097120.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'generateTextFile' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'destroyClickedElement' is not defined.","line":18,"column":32,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":53}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function generateTextFile(textareaElement, filenameWithoutExtension) {\r\n    var textToWrite = textareaElement.val();\r\n    var textFileAsBlob = new Blob([textToWrite], {type:'text/csv'});\r\n    var fileNameToSaveAs = filenameWithoutExtension + \".csv\";\r\n\r\n    var downloadLink = document.createElement(\"a\");\r\n    downloadLink.download = fileNameToSaveAs;\r\n    downloadLink.innerHTML = \"Download File\";\r\n    if (window.webkitURL != null) {\r\n        // Chrome allows the link to be clicked\r\n        // without actually adding it to the DOM.\r\n        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\r\n    }\r\n    else {\r\n        // Firefox requires the link to be added to the DOM\r\n        // before it can be clicked.\r\n        downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\r\n        downloadLink.onclick = destroyClickedElement;\r\n        downloadLink.style.display = \"none\";\r\n        document.body.appendChild(downloadLink);\r\n    }\r\n\r\n    downloadLink.click();\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097237.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097414.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":4,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const App = () => {\r\n\r\n  return (\r\n    <div style={{ padding: 20, backgroundColor: 'red', position: 'relative' }}>\r\n      <h3>See the following blue background paragraph. I want it to go beyond the padding I set for the parent div</h3>\r\n<div style={{ paddingBottom: 30}}><p style={{overflowX: 'scroll', whiteSpace: 'nowrap', backgroundColor: 'blue', position: 'absolute', left: 0, right: 0, margin: 'auto'}}>\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n  </p>\r\n</div>  \r\n        <h3>Think of it this way: I still want it to scroll as needed, but, I want it to completely go across my parent div, surpassing the padding set on it.</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('app')\r\n);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097580.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":11,"column":11}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"sample();\r\n\r\nasync function sample() {\r\n  const data = await d3.csv('../static/sample.csv');\r\n\r\n  uncount = (data, accessor) =>\r\n    data.reduce((arr, item) => {\r\n      const count = accessor(item)\r\n      for (let i = 0; i < count; i++) {\r\n        arr.push({\r\n          ...item\r\n        })\r\n      }\r\n      return arr\r\n    }, []);\r\n\r\n  const boxes = uncount(data, d => d.boxes);\r\n\r\n  const nest = d3\r\n    .nest()\r\n    .key(d => d.venue)\r\n    .entries(boxes);\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097693.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'sha256' is not defined.","line":10,"column":35,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":41}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const transform = (fn) => (obj) =>\r\n  Array.isArray (obj)\r\n    ? obj .map (transform (fn))\r\n  : Object (obj) === obj\r\n    ? Object .fromEntries (Object .entries (obj) \r\n        .map (([k, v]) => [k, transform (fn) (v)])\r\n      )\r\n  : fn (obj)\r\n\r\nconst hashObj = transform ((n) => sha256 (String (n)))\r\n\r\nconst meow = {big: 20, baz: {foo: {cat: 3, bar: 5, qux: [1, 2, 3]}}};\r\n               // added to demonstrate arrays --------^\r\n\r\nconsole .log (hashObj (meow))","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097709.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097731.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from \"react\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      a: [\"Apple\", \"pear\", \"plum\", \"currant\", \"strawberry\"],\r\n      b: [\"Amelia\", \"Oliver\", \"Sophie\", \"Alfie\", \"Jacob\"],\r\n      c: [\"mercedes\", \"bmw\", \"audi\", \"volkswagen\", \"hyundai\"],\r\n      index: null\r\n    };\r\n  }\r\n\r\n  setIndex = i => {\r\n    console.log(i);\r\n    this.setState({\r\n      index: i\r\n    });\r\n    console.log(this.state.index);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.index !== null && (\r\n          <div>\r\n            <List\r\n              a={this.state.a[this.state.index]}\r\n              b={this.state.b[this.state.index]}\r\n            />\r\n          </div>\r\n        )}\r\n        <div>\r\n          <ul>\r\n            {this.state.a.map((arr, idx) => (\r\n              <li\r\n                onClick={() => {\r\n                  console.log(\"hi\");\r\n                  this.setIndex(idx);\r\n                }}\r\n              >\r\n                {arr}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <li>{this.props.a}</li>\r\n          <li>{this.props.b}</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65097941.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  FlatList,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Button,\r\n} from \"react-native\";\r\n\r\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\r\n\r\nconst App: () => React$Node = () => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [refetch, setRefetch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://exampleapi.dev/\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, [refetch]);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        {isLoading ? (\r\n          <ActivityIndicator />\r\n        ) : (\r\n          <FlatList\r\n            data={data}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <Text style={styles.content}>{item.content}</Text>\r\n            )}\r\n          />\r\n        )}\r\n      </View>\r\n      <View style={styles.buttonBottom}>\r\n        <Button\r\n          title=\" Refresh\"\r\n          onPress={() => setRefetch(!refetch)}\r\n          style={styles.buttonShare}\r\n          color=\"#66BB6A\"\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: \"#1b262c\",\r\n    padding: 30,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  FlatList: {\r\n    backgroundColor: Colors.aquamarine,\r\n  },\r\n  content: {\r\n    fontSize: 22,\r\n    textAlign: \"left\",\r\n    color: \"#bbe1fa\",\r\n  },\r\n  buttonBottom: {\r\n    fontSize: 22,\r\n    padding: 10,\r\n    backgroundColor: \"#1b262c\",\r\n  },\r\n});\r\n\r\nexport default App;\r\n","usedDeprecatedRules":[]}]