[{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65140099.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Tracker } from 'meteor/tracker'\r\n\r\nFolioSchema = new SimpleSchema({\r\n    'name': {\r\n      'type': String,\r\n      'min': 2,\r\n      'required': true\r\n    }\r\n  },\r\n  {\r\n    'requiredByDefault': false,\r\n    'clean': {\r\n      'filter': true,\r\n      'autoconvert': true,\r\n      'removeEmptyStrings': true,\r\n      'trimStrings': true,\r\n      'getAutoValues': true,\r\n      'removeNullsFromArrays': true\r\n    },\r\n    tracker: Tracker // this line is important\r\n  })\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65140482.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<div id=\"scroll-container\" @onmousewheel=\"MouseWheelEventHandler\" @onwheel=\"MouseWheelEventHandler\">\r\n    [...]\r\n</div>\r\n\r\n@code \r\n{\r\n    private async Task MouseWheelEventHandler()\r\n    {\r\n        System.Console.WriteLine(\"Scroll\");\r\n    }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65140880.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65140995.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'beforeEach' is not defined.","line":1,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'commit' is not defined.","line":2,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'sinon' is not defined.","line":2,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'sinon' is not defined.","line":4,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'api' is not defined.","line":4,"column":16,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'users_response' is not defined.","line":4,"column":44,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":58},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":8,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'users' is not defined.","line":10,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'commit' is not defined.","line":10,"column":32,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":38},{"ruleId":"no-undef","severity":2,"message":"'page' is not defined.","line":10,"column":44,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":48},{"ruleId":"no-undef","severity":2,"message":"'itemsPerPage' is not defined.","line":10,"column":50,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":62},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":11,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'commit' is not defined.","line":11,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":13,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'commit' is not defined.","line":13,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'users_response' is not defined.","line":13,"column":61,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":75}],"errorCount":16,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"  beforeEach(() => {\r\n    commit = sinon.spy();\r\n    // Note: add users_response here.\r\n    sinon.stub(api.users, \"list\").resolves(users_response);\r\n  });\r\n\r\n  // Use async here.\r\n  it(\"should list users\", async () => {\r\n    // Use await here.\r\n    await users.actions.list({ commit }, { page, itemsPerPage });\r\n    expect(commit).to.have.been.calledWith(\"UNSET_ERROR\");\r\n    // Note: expect with property data, because called with: users.data.\r\n    expect(commit).to.have.been.calledWith(\"GET_PAGINATED\", users_response.data);\r\n  });\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65141001.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":23,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const SECOND_IN_MS = 1000;\r\nconst HOUR_IN_MS = 1000 * 60 * 60;\r\n\r\nconst addTime = (date, time) => new Date(date.getTime() + time);\r\n\r\nconst Clock = () => {\r\n  const [timeDate, setTimeDate] = useState(addTime(new Date(), SECOND_IN_MS));\r\n\r\n  const updateTimeInfo = (addedTime) => {\r\n    setTimeDate((timeDate) => addTime(timeDate, addedTime));\r\n    //other info omitted, won't affect the code\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tickClock = setInterval(() => {\r\n      updateTimeInfo(SECOND_IN_MS);\r\n    }, SECOND_IN_MS);\r\n\r\n    return () => clearInterval(tickClock);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <span>\r\n        {timeDate.toLocaleTimeString([], {\r\n          hour: \"2-digit\",\r\n          hour12: true,\r\n          minute: \"2-digit\",\r\n          second: \"2-digit\"\r\n        })}\r\n      </span>\r\n      <button type=\"button\" onClick={() => updateTimeInfo(HOUR_IN_MS)}>\r\n        +1 hour\r\n      </button>\r\n      <button type=\"button\" onClick={() => updateTimeInfo(-HOUR_IN_MS)}>\r\n        -1 hour\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65141032.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":2,"column":3}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"return (\r\n  <div>\r\n    Here's the result :\r\n    <ol>\r\n        {arr.map((value, index) => ( //<--return items\r\n            <li key={index}>{value.title}</li>\r\n        ))}\r\n    </ol>\r\n  </div>\r\n);\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65141051.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65141288.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '#'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"#gallery-content-center {\r\n    margin: 0 auto;\r\n    width: 1240px;\r\n    float: none;\r\n}\r\n\r\n@media screen and (max-width: 1250px) {\r\n    #gallery-content-center {\r\n        width: 930px;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 960px) {\r\n    #gallery-content-center {\r\n        width: 620px;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 670px) {\r\n    #gallery-content-center {\r\n        width: 310px;\r\n    }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65141333.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token :","line":2,"column":11}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"{\r\n    \"data\": \"orderStatus\",\r\n    \"render\": function (data, type, row) {\r\n\r\n        //get id of current row\r\n        var id = row.id;\r\n        console.log(id);\r\n\r\n        //modify the href attribute with id value based on actual requirement\r\n\r\n        return `\r\n        <div class=\"text-center\">\r\n            <a href=\"/Admin/OrderAdmin/UpdateOrder/${data}\" class=\"btn btn-success text- \r\n                white\" style=\"cursor:pointer\">\r\n                <i class=\"fas fa-edit\"></i>\r\n            </a>\r\n        </div>\r\n            `;\r\n    }, \"width\": \"5%\"\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65141430.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65142244.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<!doctype html>\r\n<html>\r\n\r\n<head>\r\n  <title>Load images</title>\r\n  <script>\r\n    function myFunction(numImages) {\r\n      const html = Array.from(Array(numImages).keys()).slice(1).map(key => {\r\n        const id = String(key).padStart(2, '0');\r\n        return `<div class='col-sm-4 more crop col-xs-6 col-md-3 col-lg-3'>\r\n    <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"images/image${id}.jpg\">\r\n      <img class=\"img-responsive\" alt=\"\" src=\"images/image${id}.jpg\" title=\"Here would be image${id}\" />Here would be img ${id}\r\n    </a>\r\n  </div>`\r\n      })\r\n      document.querySelector('#images').innerHTML = html.join(\"\");\r\n    }\r\n\r\n    window.addEventListener(\"load\", function() {\r\n      myFunction(5); /* change to 50 when you are happy */\r\n    });\r\n\r\n  </script>\r\n</head>\r\n\r\n<body>\r\n  <div id=\"images\"></div>\r\n</body>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65142351.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'RGraph' is not defined.","line":1,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":11}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"new RGraph.Bar({\r\n    id: 'cvs',\r\n    data: '12,18,10,9,6,20,18'.split(','),\r\n    options: {\r\n        yaxisScaleUnitsPost: 'k',\r\n        colors: ['red'],\r\n        title: 'A basic Bar chart using accessible text',\r\n        titleBold: true,\r\n        xaxis: false,\r\n        yaxis: false,\r\n        marginLeft: 50,\r\n        tooltips: '%{key}',\r\n        tooltipsFormattedUnitsPost: '%',\r\n        tooltipsCss: {\r\n            fontSize: '26pt'\r\n        },\r\n        tooltipsFormattedKeyLabels: ['Dave','John'],\r\n        tooltipsEvent: 'mousemove'\r\n    }\r\n}).draw().responsive([\r\n    {maxWidth:900,width:400,height:150,options: {textSize:10,xaxisLabels:['Mon\\n(yuck!)','Tue','Wed','Thu','Fri\\n(woo!)','Sat','Sun'],marginInner: 10}},\r\n    {maxWidth:null,width:750,height:250,options: {textSize:14,xaxisLabels: ['Monday\\n(yuck!)','Tuesday','Wednesday','Thursday','Friday\\n(woo!)','Saturday','Sunday'],marginInner: 20}}\r\n]);\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65142368.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65142440.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token *","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"* {\r\n  font-family: \"Poppins\", sans-serif;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nsection {\r\n  padding: 100px;\r\n}\r\n\r\n.row .co150 {\r\n  position: relative;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  width: 48%;\r\n}\r\n .co150 p {\r\n   width: 100%;\r\n   overflow-wrap: break-word;\r\n   \r\n   \r\n }\r\n.imgBx {\r\n  width: 100%;\r\n}\r\n.imgBx img {\r\n width: 100%;\r\n object-fit: contain;\r\n}\r\n<section class=\"about\" id=\"about\">\r\n  <div class=\"row\">\r\n    <div class=\"co150\">\r\n      <h2 class=\"titleText\"><span>A</span>bout Us</h2>\r\n      <p>udgugqguugdugwugugugduqugdgqwuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\r\n        jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh.\r\n        <br><br>lorem ipsum dolores umbridge x her husband blalalalallllllllllllllllllllllll .\r\n      </p>\r\n    </div>\r\n    <div class=\"co150\">\r\n      <div class=\"imgBx\">\r\n        <img src=\"https://i.picsum.photos/id/425/536/354.jpg?hmac=wBNHXWWIrsjZJiC-motCXU36RWkqnUAAPfVJulwHGHM\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65142482.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<application\r\n  android:name=\".MainApplication\"\r\n  android:label=\"@string/app_name\"\r\n  android:icon=\"@mipmap/ic_launcher\"\r\n  android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n  android:allowBackup=\"false\"\r\n  android:theme=\"@style/AppTheme\"\r\n >   \r\n  <activity\r\n     android:name=\".MainActivity\"\r\n    android:label=\"@string/app_name\"\r\nandroid:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\r\n   android:launchMode=\"singleTask\"\r\n   android:windowSoftInputMode=\"adjustResize\">\r\n   <intent-filter>\r\n     <action android:name=\"android.intent.action.MAIN\" />\r\n     <category android:name=\"android.intent.category.LAUNCHER\" />\r\n   </intent-filter>\r\n </activity>\r\n <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" />\r\n <meta-data android:name=\"android:name=\"com.google.android.geo.API_KEY\"\"\r\n  android:value=\"AIzaSyDPUc0RSV5OZzACrJcFPuBpxUHi0000000\" />\r\n </application>\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65142775.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":40,"column":3}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const data = {\r\n  sample1: {\r\n    4: 2245,\r\n    5: 2175,\r\n    6: 3495,\r\n    7: 1845,\r\n    11.5: 1674,\r\n    12.5: 1649\r\n  },\r\n  sample2: {\r\n    4: 3295,\r\n    5: 3600,\r\n    8: 2625,\r\n    9: 2830,\r\n    11.5: 2879,\r\n    12.5: 3090\r\n  },\r\n  sample3: {\r\n    4: 3295,\r\n    5: 3600,\r\n    6: 2625,\r\n    9: 2830,\r\n    11.5: 2879,\r\n    12.5: 3090\r\n  }\r\n};\r\n\r\nconst keys = Object.keys(data);\r\n\r\nconst mergedInnerKeys = Array.from(\r\n  new Set(\r\n    keys\r\n      .reduce((val, key) => [...val, ...Object.keys(data[key])], [])\r\n      .sort((a, b) => a - b)\r\n  )\r\n);\r\n\r\nconst res = mergedInnerKeys.map((key) => ({\r\n  index: key,\r\n  ...keys.reduce(\r\n    (v, k) => ({\r\n      ...v,\r\n      [k]: data[k][key] !== undefined ? data[k][key].toString() : ''\r\n    }),\r\n    {}\r\n  )\r\n}));\r\nconsole.log(res);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65143295.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'data' is assigned a value but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'useState' is not defined.","line":1,"column":25,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":33},{"ruleId":"no-unused-vars","severity":2,"message":"'storeData' is assigned a value but never used.","line":3,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'AsyncStorage' is not defined.","line":6,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'AsyncStorage' is not defined.","line":13,"column":21,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":33},{"ruleId":"no-undef","severity":2,"message":"'useEffect' is not defined.","line":17,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":10}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const [data, setData] = useState('');\r\n\r\nconst storeData = async (value) => {\r\n  try {\r\n    setData(value);\r\n    await AsyncStorage.setItem('locatie', value);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getInfo = async () => {\r\n  const res = await AsyncStorage.getItem('locatie');\r\n  setData(res);\r\n};\r\n\r\nuseEffect(() => {\r\n  getInfo();\r\n}, []);\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65143331.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":7,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":10,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":12}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var testATT = getATT('#graph3','data-gpget');\r\nvar testData = getData('#graph3','gpget');\r\nconsole.log(typeof testATT, testATT);\r\nconsole.log(typeof testData, testData);\r\n\r\nfunction getData(id,value) {\r\n   return $(id).data(value);\r\n}\r\nfunction getATT(id,value) {\r\n   return $(id).attr(value);\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65143343.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65143411.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'marker' is assigned a value but never used.","line":8,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'L' is not defined.","line":8,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'L' is not defined.","line":8,"column":27,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'a' is not defined.","line":8,"column":36,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":37},{"ruleId":"no-undef","severity":2,"message":"'a' is not defined.","line":8,"column":42,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":43},{"ruleId":"no-undef","severity":2,"message":"'title' is not defined.","line":9,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'a' is not defined.","line":10,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":23}],"errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const resolveIcon = (a) => {\r\n    if (a[6] === 3) {\r\n        return a[11];\r\n    }\r\n    return a[12];\r\n}\r\n\r\nvar marker = L.marker(new L.LatLng(a[9], a[8]), {\r\n   title: title,\r\n   icon: resolveIcon(a),\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65143445.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<div class=\"flex-container\">\r\n  <div class=\"download\">\r\n    <span>Download</span>\r\n    // your icon here\r\n  </div>\r\n\r\n <div class=\"print\">\r\n    <span>Print</span>\r\n    // your icon here\r\n </div>\r\n</div>\r\n\r\nflex-container {\r\n    display: flex;\r\n    }\r\n\r\n    .download, \r\n    .print {\r\n    border: 2px solid blue;\r\n    display: inline-block;\r\n    align-items: center;\r\n    }\r\n    .print{\r\n      margin-left:-6px;\r\n    }\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65143718.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":136,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let productDetails = [\r\n    {\r\n        id: \"1\",\r\n        partNo: \"10\",\r\n        productName: \"bag\",\r\n        size: \"30\",\r\n        color: [\"Blue\"],\r\n        description: \"sky bags \",\r\n\r\n    },\r\n    {\r\n        id: \"2\",\r\n        partNo: \"15\",\r\n        productName: \"bottle\",\r\n        size: \"10\",\r\n        color: [\"Green\", \"Orange\"],\r\n        description: \"plastic and still\",\r\n    },\r\n    {\r\n        id: \"4\",\r\n        partNo: \"20\",\r\n        productName: \"lunchbox\",\r\n        size: \"20\",\r\n        color: [\"Blue\", \"Red\"],\r\n        description: \"fresh food\",\r\n    },\r\n    {\r\n        id: \"3\",\r\n        partNo: \"40\",\r\n        productName: \"pen\",\r\n        size: \"10\",\r\n        color: [\"Red\", \"Blue\"],\r\n        description: \"gel pen \",\r\n\r\n    }, {\r\n        id: \"5\",\r\n        partNo: \"35\",\r\n        productName: \"notebook\",\r\n        size: \"30\",\r\n        color: [\"Blue\", \"Red\", \"Orange\"],\r\n        description: \"Writing\",\r\n    }\r\n]\r\n\r\n/** * function to add company details */\r\nfunction addCompanyDetails() {\r\n    let data = (document.getElementById('productId').value);\r\n    let date1 = document.getElementById('date').value;\r\n    let Caddress = document.getElementById('address').value;\r\n    let Cname = (document.getElementById('companyName').value);\r\n\r\n    if (data === '') {\r\n        message(\"enter id for search\");\r\n    }\r\n    for (let i = 0; i < productDetails.length; i++) {\r\n        let companyDetails = productDetails[i].companyDetails ? productDetails[i].companyDetails : { date: \"\", address: \"\", companyName: \"\" };\r\n        let p = companyDetails;\r\n        if ((productDetails[i].id) == (data)) {\r\n            p.companyName = Cname ;\r\n            productDetails[i].date = date1 ;\r\n            productDetails[i].address = Caddress;\r\n            productDetails[i].companyName=Cname;\r\n            \r\n            \r\n        }\r\n       \r\n        displayData();\r\n        clearInputData();\r\n    }\r\n}\r\n\r\n/** * this function display the data in table */\r\nfunction displayData(companyDetails) {\r\n    objectArray = Object.values(productDetails);\r\n    display(objectArray, companyDetails,clearInputData);\r\n}\r\n\r\n/** * this function is for get the value from form */\r\nfunction getValue() {\r\n    let id = document.getElementById('productId').value;\r\n    let date = document.getElementById('date').value;\r\n    let address = document.getElementById('address').value;\r\n    let companyName = document.getElementById('companyName').value;\r\n    return { id, date, address, companyName };\r\n}\r\n\r\n/** * Function is to display the data in table */\r\nfunction display(productStore,callBack) {\r\n    messageTable(\" \");\r\n    let data = productDetails;\r\n   \r\n   \r\n    let table = \"<table border = 1 cellpadding = 10 ><th colspan=7 >Product Details</th><th colspan=7 >company Details</th><tr><th>Product Id</th><th>Part No</th><th>Name</th><th>Size</th><th>Color</th><th>Description</th><th>weight</th><th>Date</th><th>Address</th><th>Company name</th></tr>\";\r\n    for (let i = 0; i < data.length; i++) {\r\n       \r\n        if (data[i].productWeight === undefined) {\r\n            data[i].productWeight = \" \";\r\n        } else { }\r\n        if (data[i].companyName === undefined) {\r\n            data[i].companyName = \" \";\r\n        } else { }\r\n        if (data[i].date === undefined) {\r\n            data[i].date = \"   \";\r\n        } else { }\r\n        if (data[i].address === undefined) {\r\n            data[i].address = \"   \";\r\n        } else { }\r\n\r\n        table += \"<tr><td>\" + data[i].id + \"</td>\";\r\n        table += \"<td>\" + data[i].partNo + \"</td>\";\r\n        table += \"<td>\" + data[i].productName + \"</td>\";\r\n        table += \"<td>\" + data[i].size + \"</td>\";\r\n        table += \"<td>\" + data[i].color + \"</td>\";\r\n        table += \"<td>\" + data[i].description + \"</td>\";\r\n        table += \"<td>\" + data[i].productWeight + \"</td>\";\r\n        table += \"<td>\" + data[i].date + \"</td>\";\r\n        table += \"<td>\" + data[i].address + \"</td>\";\r\n        table += \"<td>\" + data[i].companyName + \"</td>\";\r\n    }\r\n    messageTable(table);\r\n\r\n    clearInputData();\r\n}\r\n/** * function is to print the table */\r\nfunction messageTable(data) {\r\n    document.getElementById(\"messageTableA\").innerHTML = data;\r\n}\r\n\r\n/** * this function is to clear the data */\r\nfunction clearInputData() {\r\n    document.getElementById(\"productId\").value = \"\";\r\n    document.getElementById(\"address\").value = \"\";\r\n    document.getElementById(\"date\").value = \"\";\r\n    document.getElementById(\"companyName\").value = \"\";\r\n}\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <script src=\"home.js\"></script>\r\n    <style>\r\n        th,\r\n        td,\r\n        p,\r\n        input {\r\n            font-family: Arial, Helvetica, sans-serif;\r\n        }\r\n\r\n        table,\r\n        th,\r\n        td {\r\n            border: solid 1px #DDD;\r\n            border-collapse: collapse;\r\n            padding: 10px 10px;\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            font-weight: bold;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body onload=\"display()\">\r\n    <h2>Product Details:</h2>\r\n    <form action=\"\">\r\n        <label for=\"id\">Id: </label>&nbsp;&nbsp; <input type=\"number\" id=\"productId\" required> <input type=\"button\"\r\n            value=\"autofill\" onclick=\"auto()\"><br><br> \r\n\r\n        <label for=\"EstablishDate\">Establish Date:</label>&nbsp;&nbsp; <input type=\"date\" id=\"date\" required><br><br>\r\n        <label for=\"address\">Address:</label><br><br> <textarea name=\"address\" id=\"address\" cols=\"30\"\r\n            rows=\"10\"></textarea><br><br>\r\n        <label for=\"CompanyName\">Company Name:</label>&nbsp;&nbsp; <input type=\"text\" id=\"companyName\" required><br><br>\r\n\r\n\r\n        <input type=\"button\" value=\"add company details\" onclick=\"addCompanyDetails()\"><br><br>\r\n        <p id=\"result\"></p>\r\n        <p id=\"demo\"></p>\r\n        <p id=\"messageTableA\"></p>\r\n    </form>\r\n</body>\r\n\r\n</html>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65144257.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":2,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nexport type Config = {};\r\n\r\nexport interface BaseBO {\r\n    condition?: (config: Config) => boolean;\r\n}\r\n\r\nexport interface ContractDetailBO extends BaseBO {\r\n    sections: ContractSectionBO[];\r\n}\r\n\r\nexport interface ContractSectionBO extends BaseBO {\r\n    items: ContractSectionItemBO[];\r\n}\r\n\r\nexport interface ContractSectionItemBO extends BaseBO {\r\n    label: string;\r\n}\r\n\r\nexport type AnyBO = ContractDetailBO | ContractSectionBO | ContractSectionItemBO;\r\n\r\nfunction isContractDetailBO(target: AnyBO): target is ContractDetailBO {\r\n    return (target as ContractDetailBO).sections != null;\r\n}\r\nfunction isContractSectionBO(target: AnyBO): target is ContractSectionBO {\r\n    return (target as ContractSectionBO).items != null;\r\n}\r\n\r\nexport function populate<T extends AnyBO>(inputArray: T[], config: Config): T[] {\r\n    const returnItems: T[] = [];\r\n    for (const item of inputArray) {\r\n        // include this item if the condition passes or is not defined\r\n        if (!item.condition || item.condition(config)) {\r\n            const itemToPopulate = { ...item };\r\n\r\n            // check type of item so we know the next array to iterate\r\n\r\n            if (isContractDetailBO(itemToPopulate)) {\r\n                const nextArray: ContractSectionBO[] = populate(itemToPopulate.sections, config);\r\n                itemToPopulate.sections = nextArray;\r\n            }\r\n            if (isContractSectionBO(itemToPopulate)) {\r\n                const leaves: ContractSectionItemBO[] = populate(itemToPopulate.items, config);\r\n                itemToPopulate.items = leaves;\r\n            }\r\n            returnItems.push(itemToPopulate);\r\n        }\r\n    }\r\n    return returnItems;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65144265.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'convertObject' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":23}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function convertObject(obj) {\r\n    const mappings = {\r\n        PRODUCEID: \"PRID\",\r\n        docType: \"docType\",\r\n        PRODUCE: \"PRODUCE\",\r\n        STATUS: \"STATUS\"\r\n    };\r\n    const ret = {BusinessData: {}};\r\n    for (const key in obj) {\r\n        if (key in mappings) {\r\n            ret[mappings[key]] = obj[key];\r\n        } else {\r\n            ret.BusinessData[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65144294.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'opacityToggle' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":29},{"ruleId":"no-undef","severity":2,"message":"'map' is not defined.","line":11,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":12},{"ruleId":"no-redeclare","severity":2,"message":"'opacityToggle' is already defined.","line":21,"column":10,"nodeType":"Identifier","messageId":"redeclared","endLine":21,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'map' is not defined.","line":32,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":16}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"async function opacityToggle(layerName, opacity) { /*\r\n^^^^^ */\r\n    if (!layerName) return;\r\n\r\n    var s = 0;\r\n    while (s < 1) {\r\n//  ^^^^^\r\n        s += 0.01\r\n        s = +s.toFixed(2)\r\n        console.log('s', layerName, s, opacity);\r\n        map.setPaintProperty(layerName, 'fill-opacity', s);\r\n\r\n        await new Promise(resolve => {\r\n//      ^^^^^\r\n            requestAnimationFrame(resolve);\r\n//          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        });\r\n    }\r\n}\r\n\r\nfunction opacityToggle(layerName, opacity) {\r\n    if (!layerName) return Promise.resolve();\r\n\r\n    var s = 0;\r\n    return animate();\r\n\r\n    function animate() {\r\n        if (s < 1) {\r\n            s += 0.01\r\n            s = +s.toFixed(2)\r\n            console.log('s', layerName, s, opacity);\r\n            map.setPaintProperty(layerName, 'fill-opacity', s);\r\n            return new Promise(resolve => {\r\n//          ^^^^^^\r\n                requestAnimationFrame(resolve);\r\n            }).then(animate);\r\n//            ^^^^^^^^^^^^^^\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n}\r\n","usedDeprecatedRules":[]}]