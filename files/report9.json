[{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117455.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'displayAnnouncements' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":36},{"ruleId":"no-undef","severity":2,"message":"'axios' is not defined.","line":2,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":29},{"ruleId":"no-undef","severity":2,"message":"'_something' is not defined.","line":2,"column":37,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":47},{"ruleId":"no-undef","severity":2,"message":"'restHeaders' is not defined.","line":2,"column":157,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":168},{"ruleId":"no-undef","severity":2,"message":"'moment' is not defined.","line":5,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":30},{"ruleId":"no-unused-vars","severity":2,"message":"'itemLink' is assigned a value but never used.","line":6,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":6,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":27},{"ruleId":"no-extra-semi","severity":2,"message":"Unnecessary semicolon.","line":12,"column":2,"nodeType":"EmptyStatement","messageId":"unexpected","endLine":12,"endColumn":3,"fix":{"range":[619,621],"text":"}"}}],"errorCount":8,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"async function displayAnnouncements() {\r\n    const resp = await axios.get(`${_something}/_api/lists/GetByTitle('someName')/Items?$select=ID,Title,Body,Created,Link&$orderby=Created%20desc&$top=4`, restHeaders)\r\n    let _data = resp.data.d.results;\r\n    _data.slice(0, 4).forEach(m => {\r\n        let _newDate = moment(m.Created).utc().format(\"MMMM D, YYYY\");\r\n        const itemLink = $(\r\n            `<a href=\"#close\" data-toggle=\"modal\" data-target=\"#bkEvts-${m.ID}\" class=\"cont_evts-link\" title=\"View Announcement\">\r\n                <b>${m.Title}</b> - <i>${_newDate}</i>\r\n            </a><br>`\r\n        );\r\n    });\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117650.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117754.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'sample' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'DriveApp' is not defined.","line":5,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":22},{"ruleId":"no-undef","severity":2,"message":"'Utilities' is not defined.","line":6,"column":14,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":23},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":17,"column":30,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":17,"endColumn":31,"suggestions":[{"messageId":"removeEscape","fix":{"range":[626,627],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[626,626],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\\".","line":17,"column":38,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":17,"endColumn":39,"suggestions":[{"messageId":"removeEscape","fix":{"range":[634,635],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[634,634],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-undef","severity":2,"message":"'DriveApp' is not defined.","line":18,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":11}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function sample() {\r\n  var id = \"###\";  // File ID of your CSV file.\r\n\r\n  // This is your script.\r\n  var file = DriveApp.getFileById(id);\r\n  var rows = Utilities.parseCsv(file.getBlob().getDataAsString());\r\n  var numColumns = rows[0].length;\r\n  var date = \"sample\";\r\n  rows.forEach(function(row){\r\n    row[numColumns] = date;\r\n  });\r\n  rows[0][numColumns] = 'Date';\r\n  let csvRows = rows.map(values =>values.map(value => JSON.stringify(value).replace(/\\\\\"/g, '\"\"')));\r\n  let csvData = csvRows.map(values => values.join(',')).join('\\n');\r\n  \r\n  // I added below script for checking your CSV data.\r\n  var res = csvData.replace(/\\\"(|.+?)\\\"/g, \"\");\r\n  DriveApp.createFile(\"sample.txt\", res);\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117779.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117787.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token .","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":".select-field {\r\n  &:nth-child(1) .dropdown-list {\r\n    top: 342px;\r\n    border: 2px dashed black; \r\n  }\r\n  \r\n  &:nth-child(2) .dropdown-list {\r\n    top: 404px;\r\n    border: 2px dashed gold;\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117929.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'myFunction' is defined but never used.","line":1,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'myObject' is not defined.","line":5,"column":35,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":43},{"ruleId":"no-undef","severity":2,"message":"'condition' is not defined.","line":7,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":31}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"        function myFunction() {\r\n\r\n            let result;\r\n\r\n            result = Object.keys( myObject ).find( function ( tmp ) {\r\n\r\n                if ( condition[ tmp ] === true ) {\r\n\r\n                    return tmp; // i would like to return the value of tmp\r\n\r\n                }\r\n\r\n            });\r\n\r\n            alert( result ); // returns \"true\" or \"false\" but not the value of \"tmp\"\r\n\r\n        }\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117932.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":13,"column":12}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const divs = document.querySelectorAll( 'div' );\r\n\r\ndivs.forEach(div => div.addEventListener( 'scroll', e => {\r\n  \r\n  divs.forEach(d => {\r\n  \r\n    d.scrollTop = div.scrollTop;\r\n    d.scrollLeft = div.scrollLeft;\r\n  \r\n  });\r\n  \r\n}) );\r\nhtml, body {\r\n\r\n  height: 100%;\r\n  \r\n}\r\nbody {\r\n\r\n  display: flex;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n}\r\ndiv {\r\n\r\n  width: 50%;\r\n  height: 100%;\r\n  overflow: scroll;\r\n\r\n}\r\nspan {\r\n\r\n  width: 200vw;\r\n  height: 300vh;\r\n  display: block;\r\n  background: linear-gradient(90deg, transparent, yellow), linear-gradient( 0deg, red, blue, green );\r\n  \r\n}\r\n#div2 {\r\n\r\n  margin-top: 30px;\r\n  \r\n}\r\nconst divs = document.querySelectorAll( 'div' );\r\n\r\ndivs.forEach(div => div.addEventListener( 'scroll', e => {\r\n  \r\n  const offsetTop = div.scrollTop / (div.scrollHeight - div.clientHeight);\r\n  \r\n  const offsetLeft = div.scrollLeft / (div.scrollWidth - div.clientWidth);\r\n  \r\n  divs.forEach(d => {\r\n  \r\n    d.scrollTop = offsetTop * (d.scrollHeight - d.clientHeight);\r\n    d.scrollLeft = offsetLeft * (d.scrollWidth - d.clientWidth);\r\n    \r\n  });\r\n  \r\n}) );\r\nhtml, body {\r\n\r\n  height: 100%;\r\n  \r\n}\r\nbody {\r\n\r\n  display: flex;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n}\r\ndiv {\r\n\r\n  width: 50%;\r\n  height: 100%;\r\n  overflow: scroll;\r\n\r\n}\r\nspan {\r\n\r\n  width: 200vw;\r\n  height: 300vh;\r\n  display: block;\r\n  background: linear-gradient(90deg, transparent, yellow), linear-gradient( 0deg, red, blue, green );\r\n  \r\n}\r\n#div2 span {\r\n  \r\n  height: 500vh;\r\n  width: 500vw;\r\n  \r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117962.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {useState} from 'react'\r\n\r\nfunction Room() {\r\n    const [check, setCheck] = useState(null);\r\n\r\n    const ibegyouwork = () => {\r\n        setCheck(<button>New button</button>);\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <button onClick={ibegyouwork}>Display my button now !!!!</button>\r\n            {check}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65117995.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'promiseLoad' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'axios' is not defined.","line":2,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":17}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function promiseLoad(nameID, uID, caption) {\r\n    return axios.get(`${URL}/users/${uID}/name/${nameID}`)\r\n        .then(res => {\r\n            let obj;\r\n            if(res.data !== -1) {\r\n                obj = {\r\n                    fullName: res.data,\r\n                    caption: caption\r\n                };\r\n            }\r\n            return obj;\r\n    });\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65118100.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n<ul id=\"tabs\">\r\n  <li><a href=\"#tab1\">PC</a></li>\r\n  <li><a href=\"#tab2\">PS4</a></li>\r\n  <li><a href=\"#tab3\">XBOX</a></li>\r\n</ul>\r\n\r\n\r\n\r\n<div class=\"platform tab1\" id=\"tab1\">\r\n  <div> \r\n    platform 1\r\n  </div>\r\n</div>\r\n\r\n<div class=\"platform tab2\" id=\"tab2\">\r\n  <div> \r\n    platform 2\r\n  </div>\r\n</div>\r\n\r\n<div class=\"platform tab3\" id=\"tab3\">\r\n  <div> \r\n    platform 3\r\n  </div>\r\n</div>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65118160.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token =","line":2,"column":9}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"class App extends Component {\r\n  state = {\r\n    persons: [\r\n      { name: 'test1', num: randomNum()},\r\n      { name: 'test2', num: randomNum()}\r\n    ]\r\n  }\r\n\r\n  randomPerson =() =>{\r\n    return Math.floor(Math.random()* this.state.persons.length)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.randomPerson}>Switch Person</button>\r\n        {/* ^-- I changed this and removed the num declaration */}\r\n        <div>\r\n          <Person name={this.state.persons[num].name} randomNum={this.state.persons[num].num} />\r\n        </div>\r\n      </React.Fragment>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nfunction App() {\r\n    const randomPerson = () => Math.floor(Math.random() * this.state.persons.length);\r\n\r\n    const [person, setPerson] = useState([\r\n        { name: 'test1', num: randomNum()},\r\n        { name: 'test2', num: randomNum()}\r\n    ]);\r\n    const [currentPerson, setCurrentPerson] = useState(randomPerson());\r\n\r\n    const switchPerson = () => {\r\n        setCurrentPerson(randomPerson());\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={switchPerson}>Switch Person</button>\r\n            <div>\r\n                <Person name={person[currentPerson].name} randomNum={person[currentPerson].num} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65118413.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo\r\n} from \"react\";\r\nimport \"./style.css\";\r\n\r\nlet canvasWidth = 200;\r\nlet canvasHeight = 200;\r\n\r\nexport function useCanvas(w, h, props) {\r\n  let ref = useRef();\r\n  let elem = (\r\n    <canvas ref={ref} width={canvasWidth} height={canvasHeight} {...props} />\r\n  );\r\n\r\n  let draw = useCallback(\r\n    (box, color) => {\r\n      let c = ref.current;\r\n      let ctx = c.getContext(\"2d\");\r\n      ctx.fillStyle = color;\r\n      ctx.fillRect(box.x, box.y, box.w, box.w);\r\n    },\r\n    [w, h]\r\n  );\r\n\r\n  let clear = useCallback(() => {\r\n    ctx.clearRect(0, 0, w, h);\r\n  }, []);\r\n\r\n  return [elem, draw, clear];\r\n}\r\n\r\nfunction getMousePos(e) {\r\n  let rect = e.target.getBoundingClientRect();\r\n  return {\r\n    x: e.clientX - rect.left,\r\n    y: e.clientY - rect.top\r\n  };\r\n}\r\n\r\nfunction isOverABox(box, mousePos) {\r\n  return (\r\n    mousePos.x >= box.x &&\r\n    mousePos.y >= box.y &&\r\n    mousePos.x <= box.x + box.w &&\r\n    mousePos.y <= box.y + box.w\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  let [hovered, setHovered] = useState(false);\r\n  let [boxes, setBoxes] = useState([\r\n    { x: 5, y: 5, w: 10 },\r\n    { x: 170, y: 80, w: 10 },\r\n    { x: 80, y: 170, w: 10 }\r\n  ]);\r\n\r\n  let [canvas, draw, clear] = useCanvas(canvasWidth, canvasWidth, {\r\n    onMouseMove: e => {\r\n      let pos = getMousePos(e);\r\n      let isHovered = boxes.some(b => isOverABox(b, pos));\r\n      if (isHovered) setHovered(true);\r\n      else setHovered(false);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let color = hovered ? \"gold\" : \"black\";\r\n    boxes.forEach(b => draw(b, color));\r\n  }, [boxes, draw, hovered]);\r\n  return (\r\n    <div>\r\n      <pre>\r\n        <code>hovered: {hovered ? \"true\" : \"false\"}</code>\r\n      </pre>\r\n      {canvas}\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65119203.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token var","line":1,"column":9}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"foreach(var item in Model){\r\n  <form>\r\n    <input type=\"text\" id=\"id\" name=\"id\" value=\"item.id\"/>\r\n    <input type=\"button\" class=\"btn\" data-id=\"item.id\" name=\"submit\" value=\"Delete\"/>\r\n  </form>\r\n}\r\n\r\n<script>\r\n  $(\".btn\").click(function(){\r\n    // alert the id value\r\n    alert($(this).attr(\"data-id\"))\r\n  });\r\n</script>\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65119535.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '#'","line":113,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// match cluster icon to markers\r\nvar calc = function(markers, numStyles) {\r\n    // default to blue\r\n    var highestPriorityColor = 1;\r\n    for (var i = 0; i < markers.length; i++) {\r\n        if (markers[i].getIcon().indexOf(\"red.png\") > -1) {\r\n            // if any markers are red, will be red, can return result\r\n            return {text: markers.length, index: 3}; // index of red\r\n        } else if (markers[i].getIcon().indexOf(\"yellow.png\") > -1) {\r\n            // if any markers are yellow, update it to yellow if it is blue\r\n            if (highestPriorityColor < 2)\r\n                highestPriorityColor = 2; // index of yellow\r\n        } /* else if (markers[i].getIcon().indexOf(\"green.png\") > -1) {\r\n            // ignore green markers (leave it whatever color it is, defaults to blue)\r\n        } */\r\n    }\r\n    // return result once complete processing all the markers\r\n    return {text: markers.length, index: highestPriorityColor}; // index of chosen cluster\r\n}\r\n\r\nfunction initMap() {\r\n  var map = new google.maps.Map(document.getElementById('map'), {\r\n    center: new google.maps.LatLng(51, 4),\r\n    zoom: 6,\r\n    mapTypeControlOptions: \"roadmap\"\r\n  });\r\n\r\n  var markers = [];\r\n\r\n  // make random red, yellow, blue markers\r\n  for (var i = 0; i < 50; i++) {\r\n    var latLng = new google.maps.LatLng(51.11 - Math.random(), 4.11 - Math.random());\r\n    var marker = new google.maps.Marker({\r\n      position: latLng,\r\n      icon: 'http://maps.google.com/mapfiles/ms/micons/green.png',\r\n      label: \"\" + i,\r\n      map: map\r\n    });\r\n    markers.push(marker);\r\n  }\r\n  for (var i = 0; i < 20; i++) {\r\n    var latLng = new google.maps.LatLng(51.11 - Math.random(), 4.11 - Math.random());\r\n    var marker = new google.maps.Marker({\r\n      position: latLng,\r\n      icon: 'http://maps.google.com/mapfiles/ms/micons/yellow.png',\r\n      label: \"\" + i,\r\n      map: map\r\n    });\r\n    markers.push(marker);\r\n  }\r\n  for (var i = 0; i < 5; i++) {\r\n    var latLng = new google.maps.LatLng(51.11 - Math.random(), 4.11 - Math.random());\r\n    var marker = new google.maps.Marker({\r\n      position: latLng,\r\n      icon: 'http://maps.google.com/mapfiles/ms/micons/red.png',\r\n      label: \"\" + i,\r\n      map: map\r\n    });\r\n    markers.push(marker);\r\n  }\r\n\r\n  // match cluster icon to markers\r\n  var calc = function(markers, numStyles) {\r\n    // default to blue\r\n    var highestPriorityColor = 1;\r\n    for (var i = 0; i < markers.length; i++) {\r\n      if (markers[i].getIcon().indexOf(\"red.png\") > -1) {\r\n        // if any markers are red, will be red, can return result\r\n        return {\r\n          text: markers.length,\r\n          index: 3\r\n        }; // index of red\r\n      } else if (markers[i].getIcon().indexOf(\"yellow.png\") > -1) {\r\n        // if any markers are yellow, update it to yellow if it is blue\r\n        if (highestPriorityColor < 2)\r\n          highestPriorityColor = 2; // index of yellow\r\n      }\r\n      /* else if (markers[i].getIcon().indexOf(\"green.png\") > -1) {\r\n                 // ignore green markers (leave it whatever color it is, defaults to blue)\r\n             } */\r\n    }\r\n    // return result once complete processing all the markers\r\n    return {\r\n      text: markers.length,\r\n      index: highestPriorityColor\r\n    }; // index of chosen cluster\r\n  }\r\n\r\n  // define cluster icons\r\n  var mcOptions = {\r\n    gridSize: 50,\r\n    maxZoom: 15,\r\n    styles: [{\r\n        height: 50,\r\n        url: \"https://raw.githubusercontent.com/googlearchive/js-marker-clusterer/gh-pages/images/m1.png\",\r\n        width: 50\r\n      },\r\n      {\r\n        height: 50,\r\n        url: \"https://raw.githubusercontent.com/googlearchive/js-marker-clusterer/gh-pages/images/m2.png\",\r\n        width: 50\r\n      },\r\n      {\r\n        height: 50,\r\n        url: \"https://raw.githubusercontent.com/googlearchive/js-marker-clusterer/gh-pages/images/m3.png\",\r\n        width: 50\r\n      }\r\n    ]\r\n  };\r\n  var markerCluster = new MarkerClusterer(map, markers, mcOptions);\r\n  markerCluster.setCalculator(calc);\r\n}\r\n#map {\r\n  height: 80%;\r\n}\r\n\r\n\r\n/* Optional: Makes the sample page fill the window. */\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65119795.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token .","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":".filter((frontMatter) => {\r\n  // Get the front matter into a string, separated by spaces\r\n  const concat = Object.values(frontMatter).join(\" \").toLowerCase();\r\n\r\n  // Look for a string in quotes, if not then just find a word\r\n  const regex = /\\\"([\\w\\s\\\\\\-]+)\\\"|([\\w\\\\\\-]+)/g;\r\n\r\n  // Get all the queries\r\n  const queries = [...searchValue.toLowerCase().matchAll(regex)].map((arr) => arr[1] || arr[2]);\r\n\r\n  // Make sure that every query is satisfied\r\n  return queries.every((q) => concat.includes(q));\r\n});\r\n\r\n.filter((frontMatter) => {\r\n  // Get the front matter into a string, separated by spaces\r\n  // The prepended and appended spaces are important for the regex later!\r\n  const concat = ` ${Object.values(frontMatter).join(\" \").toLowerCase()} `;\r\n\r\n  // Look for a string in quotes, if not then just find a word\r\n  const regex = /\\\"([\\w\\s\\\\\\-]+)\\\"|([\\w\\\\\\-]+)/g;\r\n\r\n  // Get all the queries\r\n  const queries = [...searchValue.toLowerCase().matchAll(regex)].map((arr) => arr[1] || arr[2]);\r\n\r\n  // Make sure that every query is satisfied\r\n  // [\\\\s\\\\.?!_] and [\\\\s\\\\.?!_] check for a space or punctuation at the beginning and end of a word\r\n  // so that something like \"deter\" isn't matching inside of \"undetermined\"\r\n  return queries.every((q) => new RegExp(`[\\\\s\\\\.?!_]${q}[\\\\s\\\\.?!_]`).test(concat));\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65119797.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":1,"column":44}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"execute(client, connection, message, args) {\r\nmessage.channel.send(client.helpers.get('CreateEmptyEmbed').execute(\"Poll\", client, false)\r\n    .setTitle('test')\r\n    .addField(`0`)\r\n).then(embedMessage => {\r\n    embedMessage.react(`✅`)\r\n    embedMessage.react(`❎`)\r\n    const filter = (reaction, user) => user.bot!; //Ignores bot reactions\r\n    collector = embedMessage.createReactionCollector(filter,{time:15000)) //The time parameter (in milliseconds) specified for how much time the reactionCollector collects reactions\r\n    collector.on('collect',(reaction,user)=>{ //When a reaction is collected\r\n         const embed = embedMessage.embeds[0] // Get the embed that you want to edit.\r\n         embed.fields[0] = {name : 'The name of the new field' , value : 'Value of new field'}\r\n         await embedMessage.edit(embed)\r\n         })\r\n    collector.on('end',()=>{ //When the time we specified earlier is over\r\n        //Do stuff\r\n         })\r\n    \r\n})\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65119852.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n  $('select#selectBox').on('change', function() {\r\n     var value = $(this).val(); //get value from select-box\r\n      $.ajax({\r\n        type: 'POST',//can be post request or get \r\n        url: url,//put url here where you need to send\r\n        data: {\r\n          'value': value//pass value \r\n        },\r\n        success: function(response) {\r\n          //result will come here \r\n           //if recieve as html use           \r\n          $(\"somedivclass\").html(response)        \r\n          //if recieve as separted commas         \r\n          var result = response.split(\",\")\r\n          //access same using result[0],result[1] ..etc\r\n          //add value to input using\r\n          $(\"#loginid\").val(result[0]);\r\n         //same for other  \r\n    \r\n        }\r\n      });\r\n    })\r\n\r\nString value = (String) request.getParameter(\"value\");\r\nString query = \"select * from Users where yourcolumnanemtocompare=?\";\r\nPreparedStatement ps = con.prepareStatement(query);\r\nps.setString(1, value);\r\nResultSet rs = ps.executeQuery();\r\n//if value there \r\nString text;\r\nif (rs.next()) {\r\n  //change value accordingly..i.e : rs.getstring..\r\n  text = \"<input id=\" + loginid \" type=\"\r\n  text \" value=\" + rs.getInt(1) + \" /><input id=\"\r\n  firstname \" type=\"\r\n  text \" value=\" + rs.getInt(2) + \" /> <input id=\"\r\n  lastname \" type=\"\r\n  text \" value=\" + rs.getInt(3) + \" /><input id=\"\r\n  address \" type=\"\r\n  text \" value=\" + rs.getInt(4) + \" />\";\r\n}\r\n\r\nresponse.setContentType(\"text/html\"); // Set content type \r\nresponse.setCharacterEncoding(\"UTF-8\");\r\nresponse.getWriter().write(text); // response to send back.\r\n//or\r\nif (rs.next()) {\r\n  //change value accordingly..i.e : rs.getstring..\r\n  text = rs.getInt(1) + \",\" + rs.getInt(2) + \",\" + rs.getInt(3) + \",\" + rs.getInt(4);\r\n}\r\nresponse.setContentType(\"text/plain\"); // Set content type \r\nresponse.setCharacterEncoding(\"UTF-8\");\r\nresponse.getWriter().write(text); // response  to send back..\r\n//or use json to send data..\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65120075.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65120239.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'Chart' is not defined.","line":3,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":10}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const data = [2, 2.25, 3.3];\r\n\r\nnew Chart(document.getElementById(\"chart\"), {\r\n  type: \"bar\",\r\n  plugins: [{\r\n    afterLayout: chart => {\r\n      let ctx = chart.chart.ctx;\r\n      ctx.save();\r\n      let yAxis = chart.scales[\"y-axis-0\"];\r\n      let yBottom = yAxis.getPixelForValue(0);\r\n      let yTop = yAxis.getPixelForValue(5);          \r\n      let gradient = ctx.createLinearGradient(0, yBottom, 0, yTop);   \r\n      gradient.addColorStop(0, '#FF5722');           \r\n      gradient.addColorStop(0.5, '#FFC107'); \r\n      gradient.addColorStop(1, '#8BC34A');           \r\n      chart.data.datasets[0].backgroundColor = gradient;\r\n      ctx.restore();\r\n    }\r\n  }],\r\n  data: {\r\n    labels: [\"A\", \"B\", \"C\"],\r\n    datasets: [{\r\n      label: \"Evaluation\",\r\n      data: data\r\n    }]\r\n  },\r\n  options: {\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          min: Math.min(...data) - 0.2,\r\n          max: Math.max(...data) + 0.2,\r\n          stepSize: 0.5\r\n        }\r\n      }]\r\n    }\r\n  }\r\n});","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65120321.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65120441.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\n const YourPage = ({data}) => {\r\n   console.log('data is', data)\r\n   const [filters, setFilters] = useState({\r\n    type: \"\",\r\n    category: \"\"\r\n  });\r\n\r\n//your calculations\r\n\r\n  return (\r\n    <div>\r\n      Your stuff \r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query yourQueryName{\r\n      allStrapiHomes {\r\n        nodes {\r\n          type\r\n          category\r\n        }\r\n      }\r\n  }\r\n`\r\n\r\nexport default YourPage\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65120556.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":6,"column":23}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const allData = [];\r\nfor (let i = 0; i < allDetails.length; i++) {\r\n    const detail = allDetails[i];\r\n    const cells = [];\r\n    for (let j = 0; j < baseObj.cells.length; j++) {\r\n        const cell = {...baseObj.cells[j]};\r\n        switch (cell.key) {\r\n            case 'id':\r\n                cell.value = detail.id;\r\n                break;\r\n            case 'name':\r\n                cell.value = detail.name;\r\n                break;\r\n        }\r\n        cells.push(cell)\r\n    }\r\n    const row = {objKey: detail.objKey, index: i + 1, cells};\r\n    allData.push(row);\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65121205.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'insertFirst' is assigned a value but never used.","line":5,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":20},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":9,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":9,"endColumn":6,"fix":{"range":[203,209],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":9,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":9,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":10,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":10,"endColumn":6,"fix":{"range":[268,274],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":10,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":10,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":11,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":11,"endColumn":6,"fix":{"range":[333,339],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":11,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":11,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":12,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":12,"endColumn":6,"fix":{"range":[398,404],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":12,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":12,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":13,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":13,"endColumn":6,"fix":{"range":[463,469],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":13,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":13,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":14,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":14,"endColumn":6,"fix":{"range":[528,534],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":14,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":14,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":15,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":15,"endColumn":6,"fix":{"range":[593,599],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":15,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":15,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":16,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":16,"endColumn":6,"fix":{"range":[658,664],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":16,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":16,"endColumn":14},{"ruleId":"no-unused-labels","severity":2,"message":"'VM355:' is defined but never used.","line":17,"column":1,"nodeType":"Identifier","messageId":"unused","endLine":17,"endColumn":6,"fix":{"range":[723,729],"text":""}},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed.","line":17,"column":13,"nodeType":"Program","messageId":"noIrregularWhitespace","endLine":17,"endColumn":14}],"errorCount":19,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":"let string = Array.from('w3resource');\r\n\r\nfor (let i = 0; i < string.length; i++) {\r\n    let removeLast = string.pop();\r\n    let insertFirst = string.unshift(removeLast);\r\n    console.log(string);\r\n}\r\n\r\nVM355:6 (10) [\"e\", \"w\", \"3\", \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\"]\r\nVM355:6 (10) [\"c\", \"e\", \"w\", \"3\", \"r\", \"e\", \"s\", \"o\", \"u\", \"r\"]\r\nVM355:6 (10) [\"r\", \"c\", \"e\", \"w\", \"3\", \"r\", \"e\", \"s\", \"o\", \"u\"]\r\nVM355:6 (10) [\"u\", \"r\", \"c\", \"e\", \"w\", \"3\", \"r\", \"e\", \"s\", \"o\"]\r\nVM355:6 (10) [\"o\", \"u\", \"r\", \"c\", \"e\", \"w\", \"3\", \"r\", \"e\", \"s\"]\r\nVM355:6 (10) [\"s\", \"o\", \"u\", \"r\", \"c\", \"e\", \"w\", \"3\", \"r\", \"e\"]\r\nVM355:6 (10) [\"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\", \"w\", \"3\", \"r\"]\r\nVM355:6 (10) [\"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\", \"w\", \"3\"]\r\nVM355:6 (10) [\"3\", \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\", \"w\"]\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65121336.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":1,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":2},{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":2,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":4},{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":4,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":20},{"ruleId":"no-undef","severity":2,"message":"'swal' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":9}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"$(function() { // on page load\r\n  $('#removeactive').on('click', function(e) {\r\n    e.preventDefault();\r\n    var message = $(this).data('confirm');\r\n\r\n    //pop up\r\n    swal({\r\n        title: \"Are you sure ??\",\r\n        text: message,\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n      .then(function(isConfirm) {\r\n        console.log(\"confirmed?\", isConfirm);\r\n        if (isConfirm) console.log(\"deleting\"); // here you delete\r\n        else console.log(\"cancelled\"); // here you do whatever or nothing\r\n        // You cannot return anything  \r\n      });\r\n  });\r\n})","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65121451.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token .","line":31,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"highlightRows = () => {\r\n    let oddRows = document.querySelectorAll('tbody > tr.show')\r\n    oddRows.forEach((row, index)=> {\r\n        if (index % 2 == 0) {\r\n            row.style.background = '#f1f1f1'\r\n        } else {\r\n            row.style.background = '#fff'\r\n        }\r\n    })\r\n}\r\nconst filterOptions = () => {\r\n    const option = document.querySelector(\"#filter\").value;\r\n\r\n    const selection = option.replace('&', '')\r\n       \r\n    var rows = document.querySelectorAll(\"#body1 > tr\");\r\n   \r\n\r\n    rows.forEach(row => {\r\n        let td = row.querySelector(\"td:last-child\");\r\n        let filter = td.innerText.replace('&', '');\r\n        if (filter === selection) {\r\n            row.className = 'show'\r\n        } else {\r\n            row.className = 'hidden'\r\n        }\r\n    });\r\n    highlightRows()\r\n};\r\ndocument.getElementById(\"filter\").addEventListener(\"change\", filterOptions);\r\n.table-filters {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 2em;\r\n}\r\n.table-filters a {\r\n  color: #222;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  margin-right: 1em;\r\n  display: inline-block;\r\n}\r\n.table-filters a:hover {\r\n  text-decoration: none;\r\n}\r\n.table-filters select {\r\n  background: #fff;\r\n\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  width: 12em;\r\n  height: 2.5em;\r\n}\r\n\r\ntable.stats {\r\n  background: #fff;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border-radius: 6px;\r\n}\r\n\r\nthead {\r\n  background: #F36F20;\r\n  color: #fff;\r\n}\r\n\r\nth {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  text-align: left;\r\n  padding: 1em;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\ntbody td {\r\n  padding: 1.5em 1em;\r\n}\r\n\r\ntbody tr.show {\r\n  display: table-row;\r\n}\r\ntbody tr.hidden {\r\n  display: none;\r\n}\r\ntbody tr.bg-grey, tbody tr:nth-child(odd) {\r\n  background: #f1f1f1;\r\n}\r\ntbody tr:last-child td {\r\n  border-bottom: none;\r\n}\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n<div class=\"table-filters\">\r\n    <select id=\"filter\">\r\n      <option disabled selected value=\"none\">Kategórie</option>\r\n      <option>Domov</option>\r\n      <option>Ostatné</option>\r\n      <option>Hobby</option>\r\n      <option>Záhrada</option>\r\n    </select>\r\n  </div>\r\n    <div class=\"wrapper\">\r\n  \r\n      <table class=\"stats\">\r\n        <thead>\r\n          <tr class=\"head\">\r\n            <th>Názov</th>\r\n            <th>Suma</th>\r\n            <th>Kategória</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id='body1'>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Ostatné</td>\r\n          </tr>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Ostatné</td>\r\n          </tr>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Domov</td>\r\n          </tr>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Ostatné</td>\r\n          </tr>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Hobby</td>\r\n          </tr>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Hobby</td>\r\n          </tr>\r\n          <tr class=\"head\">\r\n            <td>Lorem</td>\r\n            <td>Ipsum</td>\r\n            <td>Domov</td>\r\n          </tr>\r\n\r\n        </tbody>\r\n      </table>\r\n</div>","usedDeprecatedRules":[]}]