[{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65124296.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'interval' is not defined.","line":5,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":27},{"ruleId":"no-undef","severity":2,"message":"'interval' is not defined.","line":6,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'interval' is not defined.","line":12,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":27},{"ruleId":"no-undef","severity":2,"message":"'interval' is not defined.","line":15,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":9}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var boo = document.getElementById(\"boo\");\r\nfunction move() {\r\n  boo.scrollLeft += 1;\r\n  if(boo.scrollLeft >= (1600 - boo.offsetWidth)){\r\n    clearInterval(interval);\r\n    interval = setInterval(moveReverse,5);\r\n  }\r\n}\r\nfunction moveReverse() {\r\n  boo.scrollLeft -= 1;\r\n  if(boo.scrollLeft <= 0){\r\n    clearInterval(interval);\r\n  }\r\n}\r\ninterval = setInterval(move, 5)","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65124336.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'jQuery' is not defined.","line":14,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var data = {\r\n  \"modules\": [{\r\n    \"name\": \"mod1\",\r\n    \"description\": \"mod1 description\",\r\n  }, {\r\n    \"name\": \"mod2\",\r\n    \"description\": \"mod2 description\",\r\n  }, {\r\n    \"name\": \"mod3\",\r\n    \"description\": \"mod3 description\",\r\n  }]\r\n}\r\n\r\njQuery($ => {\r\n  $.each(data.modules, function(i, field) {\r\n    let $li = $(`<li><div>Name: ${field.name}</div><div>Description: ${field.description}</div></li>`).appendTo('#moduleList');\r\n    $('<input class=\"set_inputs\" type=\"button\" value=\"select\" />').data('field', field).wrap('<div />').parent().appendTo($li);\r\n  });\r\n\r\n\r\n  $('#moduleList').on('click', '.set_inputs', e => {\r\n    let $button = $(e.currentTarget);\r\n    console.log($button.data('field'));\r\n    \r\n    // Uncomment these two lines in your production version. They are only commented \r\n    // here as they cause issues within SO snippets\r\n    //localStorage.setItem('moduleObj', JSON.stringify($button.data('field')));\r\n    //window.location.href = 'select_inputs.html';\r\n  });\r\n});","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125008.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":4,"column":9}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const getAssets = data => {\r\n  return \r\n    (\r\n        <div>\r\n            <ul>\r\n              {data.slice(0,5).map((improperAsset) => (<li>{improperAsset}</li>))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125039.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '@'","line":2,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\n@Controller()\r\nexport class UserController {\r\n\r\n    @Get(\"/users\")\r\n    getAll(@Req() request: Request, @Res() response: Response) {\r\n        return response.send(\"Hello response!\");\r\n    }\r\n\r\n}\r\n\r\n\r\nimport \"reflect-metadata\";\r\nimport { useExpressServer } from \"routing-controllers\";\r\n\r\nlet express = require(\"express\"); // or you can import it if you have installed typings\r\nlet app = express(); // your created express server\r\n// app.use() // you can configure it the way you want\r\nuseExpressServer(app, { // register created express server in routing-controllers\r\n    controllers: [UserController] // and configure it the way you need (controllers, validation, etc.)\r\n});\r\napp.listen(3000); // run your express server\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125064.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token ...","line":2,"column":9}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"    series: [{\r\n        ...\r\n    }, {\r\n        ...,\r\n        yAxis: 1,\r\n        data: [1, 0, 2, 1]\r\n    }],\r\n    yAxis: [{\r\n        ...\r\n    }, {\r\n        title: {\r\n            text: 'state'\r\n        },\r\n        categories: ['closed', 'standby', 'open'],\r\n        min: 0,\r\n        max: 2\r\n    }]\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125119.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'messup' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"no-unreachable","severity":2,"message":"Unreachable code.","line":6,"column":17,"nodeType":"ExpressionStatement","messageId":"unreachableCode","endLine":6,"endColumn":55}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function messup() {\r\n    var promise = new Promise(function(resolve, reject){\r\n        setTimeout(function() {\r\n            try {\r\n                throw new Error(\"Thrown from messup()\");\r\n                resolve('hello from messup function'); // This line will never be reached\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        }, 1000);\r\n    });\r\n    return promise;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125286.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'_' is assigned a value but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":11}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const monthNames = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\r\nconst re = /(\\d{2})\\/(\\w{3})\\/(\\d{4}):(\\d{2}):(\\d{2}):(\\d{2}) (.*)/;\r\n\r\nconst makeDate = str => {\r\n  const [_, dd, mmm, yyyy, hh, min, ss, tz] = str.match(re)\r\n  const tzStr = [tz.slice(0, 3), ':', tz.slice(3)].join(''); // make Â±hh:mm\r\n  const mm = monthNames.indexOf(mmm.toLowerCase()); // English only\r\n  const isoString = `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}${tzStr}`\r\n  console.log(isoString)\r\n  return new Date(isoString)\r\n};\r\n\r\nconst str = \"02/Dec/2020:23:58:15 +0000\"\r\nconst d = makeDate(str);\r\nconsole.log(d)","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125518.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '#'","line":70,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var question = 0;\r\n\r\n//var  questions = [\r\n//    \"The color of the sky is...?\",\r\n//    \"Paper comes from...?\",\r\n//    \"How many hours in a day?\"\r\n//  ];\r\nvar questions = Array.from(document.getElementsByClassName(\"quiz\")).reduce((carry, item) => {\r\n  carry.push(item.textContent.trim())\r\n  return carry;\r\n}, []);\r\n\r\nvar anim;\r\nvar targets;\r\n\r\nfunction prepQuestion() {\r\n  $(\"#questions\").text(questions[question]);\r\n\r\n  var textWrappers = document.querySelectorAll('#questions');\r\n  textWrappers.forEach(textWrapper => {\r\n    textWrapper.innerHTML = textWrapper.textContent.replace(/(\\S*)/g, m => {\r\n      return `<span class=\"word\">` +\r\n        m.replace(/(-|)?\\S(-|@)?/g, \"<span class='letter'>$&</span>\") +\r\n        `</span>`;\r\n    });\r\n  });\r\n\r\n  targets = Array.from(document.querySelectorAll('#questions .letter'));\r\n\r\n  anim = anime.timeline()\r\n    .add({\r\n      targets: targets,\r\n      scale: [3, 1],\r\n      scaleY: [1.5, 1],\r\n      opacity: [0, 1],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 400,\r\n      delay: (el, i) => 60 * i\r\n    });\r\n}\r\n\r\n// init\r\nprepQuestion();\r\n\r\nfunction next() {\r\n  anim = anime.timeline()\r\n    .add({\r\n      targets: targets.reverse(),\r\n      scale: [1, 3],\r\n      scaleY: [1, 1.5],\r\n      opacity: [1, 0],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 100,\r\n      delay: (el, i) => 30 * i\r\n    });\r\n\r\n  anim.complete = () => {\r\n    if (question == questions.length - 1) {\r\n      question = 0;\r\n    } // reset question\r\n    else {\r\n      question++;\r\n    }\r\n\r\n    prepQuestion();\r\n  };\r\n}\r\n#questions {\r\n  font-weight: 900;\r\n  font-size: 2.5em;\r\n  font-family: rr;\r\n}\r\n\r\n#questions .letter {\r\n  display: inline-block;\r\n  line-height: 1em;\r\n}\r\n\r\n.word {\r\n  white-space: nowrap;\r\n}\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.0/anime.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n\r\n<div class=\"quiz\">The color of the sky is...?</div>\r\n<div class=\"quiz\">Paper comes from...?</div>\r\n<div class=\"quiz\">How many hours in a day?</div>\r\n<div class=\"quiz\">A Giraffe is a fish?</div>\r\n\r\n<div id=\"questions\"></div>\r\n<br>\r\n<Button id=\"rc\" onclick=\"next()\">Next</Button>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65125724.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'username' is not defined.","line":12,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":36},{"ruleId":"no-undef","severity":2,"message":"'password' is not defined.","line":12,"column":38,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":46}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":" const http = new XMLHttpRequest();\r\n http.open(\"post\", \"https://example.com/auth/login\");\r\n http.setRequestHeader(\"Content-type\", \"application/json\");\r\n http.onreadystatechange = function () {  // change this line\r\n  if (http.readyState === 4 && http.status === 200) {\r\n    console.log(http.responseText);\r\n  }\r\n  else {\r\n    console.error(\"Error in submitting or receiving response.\");\r\n  }\r\n};\r\nhttp.send(JSON.stringify({ username, password }));\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65126073.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token {","line":1,"column":8}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"data() {\r\n  return {\r\n    newContract: {\r\n      payment_term_days: \"\"\r\n    }\r\n  }\r\n},\r\ncomputed: {\r\n  payment_term_pct() {\r\n    const daysToPct = {\r\n      30: 4,\r\n      60: 1.5\r\n    }\r\n    return daysToPct[this.newContract.payment_term_days];\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65126188.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":5,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"//model.js\r\n   const token = new Tokens();\r\n    token.setAccessToken(access_token);\r\n    token.setRefreshToken(refresh_token);\r\n    export default token;\r\n \r\n// scheduler.js\r\nimport { test } from './models/model.js'\r\n\r\n// Here, the test is going to be the same as declared before.\r\nconsole.log('xxx',test.getAccessToken())\r\n\r\nexport default class TokensSingleton {\r\n    this.instance = null;\r\n\r\n    constructor(){ /* ... */}\r\n\r\n    static getInstance() {\r\n        if(!TokensSingleton.instance) {\r\n            TokensSingleton.instance = new TokensSingleton();\r\n        }\r\n        \r\n        return TokensSingleton.instance;\r\n    }\r\n\r\n    /* ... */\r\n}\r\n\r\n\r\n//index.js\r\n    const token = TokenSingleton.getInstance();\r\n    token.setAccessToken('test');\r\n    token.setRefreshToken(refresh_token);\r\n\r\n// scheduler.js\r\nimport Tokens from './models/tokens.js'\r\n\r\n\r\nconst test = TokenSingleton.getInstance();\r\nconsole.log('xxx',test.getAccessToken()) // xxx, test\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65126233.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65126671.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token","line":21,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"jQuery(document).ready(function($) {\r\n  var calendarEl = document.getElementById('calendar');\r\n  var calendar = new FullCalendar.Calendar(calendarEl, {\r\n    //...etc\r\n  });\r\n  calendar.render();\r\n\r\n  $('.holiday').on('click', function() {\r\n    calendar.addEventSource({\r\n      events: [ // put the array in the `events` property\r\n      {\r\n        title: 'Test-Event',\r\n        start: '2020-11-11',\r\n        overlap: false,\r\n        display: 'background',\r\n        color: '#ff9f89'\r\n      }\r\n    ]\r\n  });\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127162.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'myfunction' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":20}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function myfunction(X) {\r\n var list = document.getElementsByClassName(X + \" class2\");\r\n var listAll = document.getElementsByClassName(\"All\");\r\n \r\n     for(var t=0;t<listAll.length;t++)\r\n    listAll[t].style.display=\"none\";\r\n    \r\n     for(var y=0;y<list.length;y++)\r\n    list[y].style.display=\"block\";\r\n \r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127305.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'$' is not defined.","line":6,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":14}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// how does it look this way?\r\nconsole.log(document.querySelector(`#foo > option[value^='#P1']`));\r\n// aha!\r\nconsole.log(document.querySelector(`#foo > option[value='#P1\\\\\\\\\"']`));\r\n// jQuery too?\r\nconsole.log($(`#foo > option[value='#P1\\\\\\\\\"']`)[0]);\r\n// how about value=\"\\âº\"?\r\nconsole.log(document.querySelector(`#foo > option[value='\\\\\\\\âº']`));\r\n\r\n// fun use\r\ndocument.body.appendChild( Object.assign( document.createElement(\"div\"), {\r\n    style: \"font-size:4rem; top:-15px;position:absolute;left:5rem;\",\r\n    innerHTML: document.querySelector(`#foo > option[value='\\\\\\\\âº']`).value.slice(1), \r\n  } )\r\n);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127355.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected character '#'","line":90,"column":9}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":" var question = 0;\r\n\r\nvar questions = Array.from(document.getElementsByClassName(\"quiz\")).reduce((carry, item) => {\r\n  carry.push(item.textContent.trim())\r\n  return carry;\r\n}, []);\r\n\r\nvar anim;\r\nvar targets;\r\n\r\nfunction prepQuestion() {\r\n  $(\"#rect\").text(questions[question]);\r\n\r\n  var textWrappers = document.querySelectorAll('#rect');\r\n  textWrappers.forEach(textWrapper => {\r\n    textWrapper.innerHTML = textWrapper.textContent.replace(/(\\S*)/g, m => {\r\n      return `<span class=\"word\">` +\r\n        m.replace(/(-|)?\\S(-|@)?/g, \"<span class='letter'>$&</span>\") +\r\n        `</span>`;\r\n    });\r\n  });\r\n\r\n  targets = Array.from(document.querySelectorAll('#rect .letter'));\r\n\r\n  anim = anime.timeline()\r\n    .add({\r\n      targets: targets,\r\n      scale: [3, 1],\r\n      scaleY: [1.5, 1],\r\n      opacity: [0, 1],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 400,\r\n      delay: (el, i) => 60 * i\r\n    });\r\n}\r\n\r\n// init\r\nprepQuestion();\r\n\r\nfunction next() {\r\n  anim = anime.timeline()\r\n    .add({\r\n      targets: targets.reverse(),\r\n      scale: [1, 3],\r\n      scaleY: [1, 1.5],\r\n      opacity: [1, 0],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 100,\r\n      delay: (el, i) => 30 * i\r\n    });\r\n\r\n  anim.complete = () => {\r\n    if (question == questions.length - 1) {\r\n      question = 0;\r\n    } // reset question\r\n    else {\r\n      question++;\r\n    }\r\n\r\n    prepQuestion();\r\n  };\r\n}\r\n\r\nfunction previous() {\r\n  anim = anime.timeline()\r\n    .add({\r\n      targets: targets.reverse(),\r\n      scale: [1, 3],\r\n      scaleY: [1, 1.5],\r\n      opacity: [1, 0],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 100,\r\n      delay: (el, i) => 30 * i\r\n    });\r\n\r\n  anim.complete = () => {\r\n    if (question == 0) {\r\n      question = questions.length - 1;\r\n    } // reset question\r\n    else {\r\n      question--;\r\n    }\r\n\r\n    prepQuestion();\r\n  };\r\n}\r\n        #rect {\r\n  font-weight: 900;\r\n  font-size: 2.5em;\r\n  font-family: rr;\r\n}\r\n\r\n#rect .letter {\r\n  display: inline-block;\r\n  line-height: 1em;\r\n}\r\n\r\n#quizss {\r\ndisplay:none;\r\n}\r\n\r\n.word {\r\n  white-space: nowrap;\r\n}\r\n<script src=\"/scripts/snippet-javascript-console.min.js?v=1\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.0/anime.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n\r\n\r\n\r\n<div id=\"quizss\">\r\n<div class=\"quiz\">Question-1 : The color of the sky is...?</div>\r\n<div class=\"quiz\">Question-2 : Paper comes from...?</div>\r\n<div class=\"quiz\">Question-3 : How many hours in a day?</div>\r\n<div class=\"quiz\">Question-4 : A Giraffe is a fish?</div>\r\n</div>\r\n\r\n\r\n\r\n<div id=\"rect\"></div>\r\n\r\n\r\n\r\n<br>\r\n<Button id=\"rc\" onclick=\"next()\">Next</Button>\r\n<Button id=\"rc\" onclick=\"previous()\">previous</Button>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127376.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127483.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":26,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function exportHTML(){    \r\n    // Add inputs values to the document before it rendered:\r\n    var inputs = document.querySelectorAll('input');\r\n    for (var i=0; i < inputs.length; i++) {\r\n        let ps = document.createElement('p');\r\n        document.getElementById(\"source-html\").appendChild(ps)\r\n        ps.textContent = inputs[i].value;\r\n    }\r\n\r\n    // continue with your code\r\n   var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \"+\r\n        \"xmlns:w='urn:schemas-microsoft-com:office:word' \"+\r\n        \"xmlns='http://www.w3.org/TR/REC-html40'>\"+\r\n        \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\r\n   var footer = \"</body></html>\";\r\n   var sourceHTML = header+document.getElementById(\"source-html\").innerHTML+footer;\r\n   \r\n   var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\r\n   var fileDownload = document.createElement(\"a\");\r\n   document.body.appendChild(fileDownload);\r\n   fileDownload.href = source;\r\n   fileDownload.download = 'document.doc';\r\n   fileDownload.click();\r\n   document.body.removeChild(fileDownload);\r\n}\r\n<body>\r\n<div class=\"source-html-outer\">\r\n    <div id=\"source-html\">\r\n        <h1>\r\n            <center>Artificial Intelligence</center>\r\n        </h1>\r\n        <h2>Overview</h2>\r\n        <p>\r\n            Artificial Intelligence(AI) is an emerging technology\r\n            demonstrating machine intelligence. The sub studies like <u><i>Neural\r\n                    Networks</i>, <i>Robatics</i> or <i>Machine Learning</i></u>\r\n            are the parts of AI. This technology is expected to be a\r\n            prime part of the real world in all levels.\r\n        </p>        \r\n        \r\n    </div>\r\n    <div class=\"content-footer\">\r\n        <!-- move this form the div you convert to DOC-->\r\n        <input type=\"text\" value=\"123456\" />\r\n        <input type=\"text\" value=\"123456\" style=\"margin-left: 150px;\"/>\r\n        <button id=\"btn-export\" onclick=\"exportHTML();\">Export to word\r\n            doc</button>\r\n    </div>\r\n</div>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127496.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":10,"column":12}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const MyComponent = props => {\r\n    const number = useRef(0);\r\n    React.useEffect(() => {\r\n        number.current = number.current + 1\r\n        console.log('inside useEffect: ', number.current);\r\n    }, [number.current])\r\n\r\n    console.log('outside useEffect: ', number.current);\r\n\r\n    return <div/>\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65127699.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":13,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"var labels = document.querySelectorAll(\"#uniteLabel\"),\r\nunitOutputs = document.querySelectorAll(\"#uniteOutput\");\r\n\r\nfor (var i=0; i < labels.length; i++) {\r\n  if (labels[i].innerHTML == \"En travers\") {\r\n    unitOutputs[i].innerHTML = \"StÃ¨re\";\r\n  } else if (labels[i].innerHTML == \"A lâunitÃ© de produit\") {\r\n    unitOutputs[i].innerHTML = \"StÃ¨re\";\r\n  } else if (labels[i].innerHTML == \"En bloc\") {\r\n    unitOutputs[i].innerHTML = \"m3\";\r\n  }\r\n}\r\n<div class=\"post\">\r\n  <div id=\"uniteLabel\">En travers</div>\r\n  <div id=\"uniteOutput\"></div>\r\n</div>\r\n\r\n<div class=\"post\">\r\n  <div id=\"uniteLabel\">A lâunitÃ© de produit</div>\r\n  <div id=\"uniteOutput\"></div>\r\n</div>\r\n\r\n<div class=\"post\">\r\n  <div id=\"uniteLabel\">En bloc</div>\r\n  <div id=\"uniteOutput\"></div>\r\n</div>","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65128214.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\r\n\r\nexport const Checkboxes = () => {\r\n  const [checkedIds, setCheckedIds] = useState(new Set([\"everywhere\"]));\r\n\r\n  const handleCheck = ({ id, checked }) => {\r\n    if (checked) {\r\n      if (id === \"everywhere\") {\r\n        checkedIds.clear();\r\n      } else {\r\n        checkedIds.delete(\"everywhere\");\r\n      }\r\n      checkedIds.add(id);\r\n    } else {\r\n      checkedIds.delete(id);\r\n    }\r\n    setCheckedIds(new Set(checkedIds));\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input\r\n          id=\"everywhere\"\r\n          type=\"checkbox\"\r\n          checked={checkedIds.has(\"everywhere\")}\r\n          onChange={(e) => handleCheck(e.target)}\r\n        />{\" \"}\r\n        Search everywhere\r\n      </label>\r\n\r\n      <label>\r\n        <input\r\n          id=\"option-1\"\r\n          type=\"checkbox\"\r\n          checked={checkedIds.has(\"option-1\")}\r\n          onChange={(e) => handleCheck(e.target)}\r\n        />{\" \"}\r\n        Option 1\r\n      </label>\r\n\r\n      <label>\r\n        <input\r\n          id=\"option-2\"\r\n          type=\"checkbox\"\r\n          checked={checkedIds.has(\"option-2\")}\r\n          onChange={(e) => handleCheck(e.target)}\r\n        />{\" \"}\r\n        Option 2\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65128473.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'timestamp' is not defined.","line":2,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'switchMap' is not defined.","line":3,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'concat' is not defined.","line":4,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'of' is not defined.","line":5,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'EMPTY' is not defined.","line":6,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'delay' is not defined.","line":6,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'timeToNextHourInMs' is not defined.","line":6,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":42},{"ruleId":"no-undef","severity":2,"message":"'repeat' is not defined.","line":9,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'retryWhen' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":14},{"ruleId":"no-undef","severity":2,"message":"'concatMap' is not defined.","line":19,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":19,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'iif' is not defined.","line":20,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":14},{"ruleId":"no-undef","severity":2,"message":"'throwError' is not defined.","line":22,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'of' is not defined.","line":23,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'delay' is not defined.","line":23,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":33},{"ruleId":"no-undef","severity":2,"message":"'timestamp' is not defined.","line":32,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'switchMap' is not defined.","line":33,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'concat' is not defined.","line":34,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'of' is not defined.","line":35,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'EMPTY' is not defined.","line":36,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":36,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'delay' is not defined.","line":36,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":36,"endColumn":23},{"ruleId":"no-undef","severity":2,"message":"'timeToNextHourInMs' is not defined.","line":36,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":36,"endColumn":42},{"ruleId":"no-undef","severity":2,"message":"'repeat' is not defined.","line":39,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":39,"endColumn":9}],"errorCount":22,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"this.http.get(`/update`).pipe(\r\n  timestamp(),\r\n  switchMap(({ timestamp, value }) =>\r\n    concat(\r\n      of(value),\r\n      EMPTY.pipe(delay(timeToNextHourInMs(timestamp)))\r\n    )\r\n  ),\r\n  repeat()\r\n);\r\n\r\nconst RETRY_DELAY = 2000;\r\nconst MAX_RETRY_FOR_ONE_HTTP_CALL = 3;\r\n\r\nconst automaticRetry = () => (obs$) =>\r\n  obs$.pipe(\r\n    retryWhen((error$) =>\r\n      error$.pipe(\r\n        concatMap((error, index) =>\r\n          iif(\r\n            () => index >= MAX_RETRY_FOR_ONE_HTTP_CALL,\r\n            throwError(error),\r\n            of(error).pipe(delay(RETRY_DELAY))\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\nthis.http.get(`/update`).pipe(\r\n  automaticRetry(),\r\n  timestamp(),\r\n  switchMap(({ timestamp, value }) =>\r\n    concat(\r\n      of(value),\r\n      EMPTY.pipe(delay(timeToNextHourInMs(timestamp)))\r\n    )\r\n  ),\r\n  repeat()\r\n);\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65128613.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":4,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":27},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":10,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":12,"column":20,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":17,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":21,"column":19,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":24},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":24,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":27},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":26,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":27},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":27,"column":23,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":32,"column":25,"nodeType":"Identifier","messageId":"undef","endLine":32,"endColumn":30},{"ruleId":"no-undef","severity":2,"message":"'THREE' is not defined.","line":33,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":31}],"errorCount":10,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let W = window.innerWidth;\r\nlet H = window.innerHeight;\r\n\r\nconst renderer = new THREE.WebGLRenderer({\r\n  antialias: true,\r\n  alpha: true\r\n});\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst scene = new THREE.Scene();\r\n\r\nconst camera = new THREE.PerspectiveCamera(28, 1, 1, 1000);\r\ncamera.position.set(10, 10, 50);\r\ncamera.lookAt(scene.position);\r\nscene.add(camera);\r\n\r\nconst light = new THREE.DirectionalLight(0xffffff, 1);\r\nlight.position.set(0, 0, -1);\r\ncamera.add(light);\r\n\r\nconst group = new THREE.Group();\r\nscene.add(group);\r\n\r\nconst arrowMat = new THREE.MeshLambertMaterial({color:\"green\"});\r\n\r\nconst arrowGeo = new THREE.ConeBufferGeometry(2, 5, 32);\r\nconst arrowMesh = new THREE.Mesh(arrowGeo, arrowMat);\r\narrowMesh.rotation.x = Math.PI / 2;\r\narrowMesh.position.z = 2.5;\r\ngroup.add(arrowMesh);\r\n\r\nconst cylinderGeo = new THREE.CylinderBufferGeometry(1, 1, 5, 32);\r\nconst cylinderMesh = new THREE.Mesh(cylinderGeo, arrowMat);\r\ncylinderMesh.rotation.x = Math.PI / 2;\r\ncylinderMesh.position.z = -2.5;\r\ngroup.add(cylinderMesh);\r\n\r\nfunction render() {\r\n  renderer.render(scene, camera);\r\n}\r\n\r\nfunction resize() {\r\n  W = window.innerWidth;\r\n  H = window.innerHeight;\r\n  renderer.setSize(W, H);\r\n  camera.aspect = W / H;\r\n  camera.updateProjectionMatrix();\r\n  render();\r\n}\r\n\r\nwindow.addEventListener(\"resize\", resize);\r\n\r\nresize();\r\n\r\nlet rad = 0;\r\n\r\nfunction animate() {\r\n  rad += 0.05;\r\n  group.lookAt(Math.sin(rad) * 100, Math.cos(rad) * 100, 100);\r\n  renderer.render(scene, camera);\r\n  requestAnimationFrame(animate);\r\n}\r\nrequestAnimationFrame(animate);","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65128957.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":10,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const useStyles = makeStyles(() => ({\r\n  h5: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography className={classes.h5} variant=\"h5\">\r\n          Lorem Ipsum Lorem Ipsum\r\n        </Typography>\r\n        <Grid item>\r\n          <Grid container item justify=\"flex-end\" direction=\"row\">\r\n            <Button variant=\"contained\">b1</Button>\r\n            <Button variant=\"contained\">b2</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\vbntb-07\\PycharmProjects\\MSR\\files\\65129079.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: 'import' and 'export' may appear only with 'sourceType: module'","line":1,"column":1}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\r\nimport Tree from \"react-tree-graph\";\r\nimport \"./styles.css\";\r\n\r\nconst data = {\r\n  name: \"Parent\",\r\n  children: [\r\n    {\r\n      name: \"Child One\"\r\n    },\r\n    {\r\n      name: \"Child Two\"\r\n    }\r\n  ]\r\n};\r\nexport default function App() {\r\n  return (\r\n    <div className=\"custom-container\">\r\n      <Tree data={data} height={200} width={400} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","usedDeprecatedRules":[]}]